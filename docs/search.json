[{"path":"https://dboslab.github.io/expowo/articles/associated_data.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Associated data","text":"Install latest development version expowo GitHub:","code":"#install.packages(\"devtools\") devtools::install_github(\"DBOSlab/expowo\") library(expowo)"},{"path":"https://dboslab.github.io/expowo/articles/associated_data.html","id":"powocodes---a-complete-list-of-angiosperm-families-and-associated-uri-addresses","dir":"Articles","previous_headings":"","what":"POWOcodes - A complete list of angiosperm families and associated URI addresses","title":"Associated data","text":"POWOcodes data dataframe containing list families flowering plants available POWO database, according APG IV’s classification. produced using functions apgFamilies get_pow package taxize. POWOcodes data useful purpose query many plant families . addition names POWO’s accepted plant families, required search expowo’s functions, data package corresponding family’s URI, used internally function opening connection family page Plants World Online. call associated data R environment, use code :","code":"utils::data(\"POWOcodes\")"},{"path":"https://dboslab.github.io/expowo/articles/associated_data.html","id":"angiodata---a-dataframe-of-angiosperm-species","dir":"Articles","previous_headings":"","what":"angioData - A dataframe of Angiosperm species","title":"Associated data","text":"angioData dataframe-formatted list species families flowering plants associated data, retrieved POWO database using expowo’s function powoSpecies. publication purposes package size limitation, selected families include associated data let information easily available. Currently, species five plant families listed Table 1. last update data Nov 2022. TABLE 1. plant families species number within angioData.  addition accepted species (excluding hybrid species) families , angioData also contains publication, authorship, global geographic distribution country botanical level species. global classification botanical divisions follows World Geographical Scheme Recording Plant Distributions, already associated taxon’s distribution POWO. example shows call angioData:","code":"utils::data(\"angioData\")"},{"path":"https://dboslab.github.io/expowo/articles/associated_data.html","id":"angiogenera---a-dataframe-of-angiosperm-genera","dir":"Articles","previous_headings":"","what":"angioGenera - A dataframe of Angiosperm genera","title":"Associated data","text":"angioGenera comprises genera families flowering plants associated data mined POWO database using powoGenera. publication purposes package size limitation, selected families include associated data let information easily available. Currently, six plant families (Lecythidaceae, Aristolochiaceae, Begoniaceae, Martyniaceae, Dipterocarpaceae, Fagaceae) listed Table 2. last update data Nov 2022. TABLE 2. plant families genera within angioGenera.  addition list accepted genera families, dataframe-formatted angioGenera also contains publication, authorship, species number global geographic distribution country botanical level genus. global classification botanical divisions follows World Geographical Scheme Recording Plant Distributions, already associated taxon’s distribution POWO. example shows call angioGenera:","code":"utils::data(\"angioGenera\")"},{"path":"https://dboslab.github.io/expowo/articles/associated_data.html","id":"botregions---countries-and-associated-classification-of-botanical-divisions","dir":"Articles","previous_headings":"","what":"botregions - Countries and associated classification of botanical divisions","title":"Associated data","text":"botregions data package dataframe containing countries World associated classification botanical divisions according World Geographical Scheme Recording Plant Distributions. built using custim script specific functions packages rgdal, ggplot2, broom, sf raster (original script can made available upon request). dataset useful purpose query distribution data divisions world expowo ’s functions convert country names. call associated data R environment, use code :","code":"utils::data(\"botregions\")"},{"path":"https://dboslab.github.io/expowo/articles/associated_data.html","id":"botdivmap---a-global-map-of-botanical-country-subdivisions","dir":"Articles","previous_headings":"","what":"botdivmap - A global map of botanical country subdivisions","title":"Associated data","text":"botdivmap data package Sf dataframe containing global-scale map botanical countries (level 3) according World Geographical Scheme Recording Plant Distributions. Besides botanical country names geometry, also contains codes level 3, level 2 level 1 distribution data. originally built using custom script functions packages rgdal, ggplot2 sf. botdivmap also usefull internally expowo’s function powoMap user wants plot native introduced distribution species genus according botanical countries. call associated data R environment, use code :","code":"utils::data(\"botdivmap\")"},{"path":"https://dboslab.github.io/expowo/articles/mapping_distribution.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Mapping global distribution for any plant genus or family","text":"Install latest development version expowo GitHub:","code":"#install.packages(\"devtools\") devtools::install_github(\"DBOSlab/expowo\") library(expowo)"},{"path":"https://dboslab.github.io/expowo/articles/mapping_distribution.html","id":"mining-species-distribution-from-powo-to-use-as-input-data-in-powomap","dir":"Articles","previous_headings":"","what":"1. Mining species distribution from POWO to use as input data in powoMap","title":"Mapping global distribution for any plant genus or family","text":"create global distribution maps using powoMap function, use first package’s associated powoSpecies function get distribution information species target family genus. also possible adjust one arguments powoSpecies function extract data genus list genera. See details another article . example shows mine distribution specific genus Lecythidaceae. defining vector within argument genus, function search species associated distribution data just genus Cariniana. Note create object called mapspdist, dataframe-formatted input data create map. output shown (TABLE 1) simplified version, removed columns focus display just distribution data. TABLE 1. general powoSpecies search mining distribution Lecythidaceae genus Cariniana.","code":"mapspdist <- powoSpecies(family = \"Lecythidaceae\",                           genus = \"Cariniana\",                          hybridspp = FALSE,                          country = NULL,                          verbose = TRUE,                          save = TRUE,                          dir = \"results_powoSpecies/\",                          filename = \"Lecythidaceae_Cariniana\")"},{"path":"https://dboslab.github.io/expowo/articles/mapping_distribution.html","id":"using-an-external-spreadsheet-as-input-data-in-powomap","dir":"Articles","previous_headings":"","what":"2. Using an external spreadsheet as input data in powoMap","title":"Mapping global distribution for any plant genus or family","text":"possible use data databases create global maps using powoMap function. spreadsheet data extracted sources must standardized columns order powoMap function works properly (see example ideal structure). Therefore, spreadsheet used input must least four columns: “genus”, “taxon_name”, “native_to_country”, “native_to_botanical_countries”. “genus” column contain genus name written full (e.g., Aphelandra) stored row, “taxon_name” refers scientific plant name without authorship (e.g., Aphelandra acrensis), “native_to_country” column must full country name global native distribution species, political country name separated comma space right (e.g., Brazil, Peru), “native_to_botanical_countries” column refers global native distribution according TDWG botanical subdivision level 3 species (e.g., Brazil North, Peru).","code":""},{"path":"https://dboslab.github.io/expowo/articles/mapping_distribution.html","id":"creating-global-scale-map-for-one-genus-to-show-species-richness-at-political-country-level","dir":"Articles","previous_headings":"","what":"3. Creating global-scale map for one genus to show species richness at political country level","title":"Mapping global distribution for any plant genus or family","text":"generate global distribution map one genus show species richness political country level, use previously generated mapspdist object input data powoMap function set map_div argument “native_to_country”. column dataframe-formatted mapspdist object associated species distribution political country. example shows create global distribution map Cariniana’s species richness colored viridis palette Viridis package. set arguments vir_color bre_color Viridis RColorBrewer color palettes, two maps colored respectively color vectors automatically generated. Different file formats resolutions (e.g. JPG, PDF, PNG, TIFF) also supported setting arguments format dpi. FIGURE 1. Global species richness genus Cariniana country level colored viridis scale.","code":"powoMap(data = mapspdist,         botctrs = NULL,         map_div = \"native_to_country\",         multigen = TRUE,         verbose = FALSE,         vir_color = \"viridis\",         bre_color = NULL,         leg_title = \"SR\",         dpi = 600,         dir = \"results_powoMap/\",         filename = \"global_richness_country_map\",         format = \"jpg\")"},{"path":"https://dboslab.github.io/expowo/articles/mapping_distribution.html","id":"creating-global-scale-map-for-one-genus-to-show-species-richness-at-botanical-country-level","dir":"Articles","previous_headings":"","what":"4. Creating global-scale map for one genus to show species richness at botanical country level","title":"Mapping global distribution for any plant genus or family","text":"generate global distribution map one genus show species richness botanical country level, run first data(botdivmap) load global map sf data.frame format comes associated expowo package. resulting object input argument botctrs within powoMap function. , use previously generated mapspdist object input data powoMap function set map_div argument “native_to_botanical_countries”. column dataframe-formatted mapspdist object associated species distribution botanical countries. example shows create global distribution map Cariniana’s species richness colored viridis palette Viridis package. set arguments vir_color bre_color Viridis RColorBrewer color palettes, two maps colored respectively color vectors automatically generated. Different file formats resolutions (e.g. JPG, PDF, PNG, TIFF) also supported setting arguments format dpi. FIGURE 2. Global species richness genus Cariniana botanical country level colored viridis scale.","code":"data(botdivmap)  powoMap(data = mapspdist,         botctrs = botdivmap,         map_div = \"native_to_botanical_countries\",         multigen = TRUE,         verbose = FALSE,         vir_color = \"viridis\",         bre_color = NULL,         leg_title = \"SR\",         dpi = 600,         dir = \"results_powoMap/\",         filename = \"global_richness_botcountry_map\",         format = \"jpg\")"},{"path":"https://dboslab.github.io/expowo/articles/mapping_distribution.html","id":"creating-global-scale-map-of-species-richness-for-an-entire-family","dir":"Articles","previous_headings":"","what":"5. Creating global-scale map of species richness for an entire family","title":"Mapping global distribution for any plant genus or family","text":"generate family-level global distribution map species richness, use powoSpecies function without genus constraint query full species list entire family associated distribution data. , resulting query object used input data powoMap function. example uses previously generated dataframe-formatted mapspdist object input data powoMap function, map_div argument set “native_to_country”, multigen argument set FALSE, vir_color argument set “viridis”, bre_color argument set “Spectral”, automatically produce two global distribution maps Lecythidaceae’s species richness country level, distinctly colored Viridis RColorBrewer color palettes. Note set multigen TRUE, powoMap function produced individual distribution maps species richness every single genus within Lecythidaceae, stored desired directory dir argument. FIGURE 3. Global species richness Lecythidaceae country level colored viridis scale. FIGURE 4. Global species richness Lecythidaceae country level colored Spectral scale. example uses previously generated dataframe-formatted mapspdist object input data powoMap function, map_div argument set “native_to_botanical_countries”, vir_color argument set “viridis”, bre_color argument set “Spectral”, automatically produce two global distribution maps Lecythidaceae’s species richness botanical country-level, distinctly colored Viridis RColorBrewer color palettes. Note set multigen TRUE, powoMap function produced individual distribution maps species richness every single genus within Lecythidaceae, stored desired directory dir argument. FIGURE 5. Global species richness Lecythidaceae botanical country level colored viridis scale. FIGURE 6. Global species richness Lecythidaceae botanical country level colored Spectral scale.","code":"mapspdist <- powoSpecies(family = \"Lecythidaceae\",                          genus = NULL,                          hybridspp = FALSE,                          country = NULL,                          verbose = FALSE,                          save = FALSE,                          dir = \"results_powoSpecies/\",                          filename = \"Lecythidaceae\") data(botdivmap)  powoMap(data = mapspdist,         botctrs = botdivmap,         map_div = \"native_to_country\",         multigen = FALSE,         verbose = FALSE,         vir_color = \"viridis\",         bre_color = \"Spectral\",         leg_title = \"SR\",         dpi = 600,         dir = \"results_powoMap/\",         filename = \"global_richness_botcountry_map\",         format = \"jpg\") data(botdivmap)  powoMap(data = mapspdist,         botctrs = botdivmap,         map_div = \"native_to_botanical_countries\",         multigen = FALSE,         verbose = FALSE,         vir_color = \"viridis\",         bre_color = \"Spectral\",         leg_title = \"SR\",         dpi = 600,         dir = \"results_powoMap/\",         filename = \"global_richness_botcountry_map\",         format = \"jpg\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_accepted_genera.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Mining genus list for any plant family","text":"Install latest development version expowo GitHub:","code":"#install.packages(\"devtools\") devtools::install_github(\"DBOSlab/expowo\") library(expowo)"},{"path":"https://dboslab.github.io/expowo/articles/mining_accepted_genera.html","id":"mining-all-accepted-genera-for-any-angiosperm-family","dir":"Articles","previous_headings":"","what":"Mining all accepted genera for any angiosperm family","title":"Mining genus list for any plant family","text":"function powoGenera returns dataframe saves CSV file listing genera associated number accepted species global geographic distribution country botanical level. global classification botanical divisions follows World Geographical Scheme Recording Plant Distributions, already associated taxon’s distribution POWO. TABLE 1. general powoGenera search mining accepted genera specific angiosperm families.","code":"powoGenera(family = c(\"Aristolochiaceae\", \"Begoniaceae\", \"Martyniaceae\"),            verbose = FALSE,            save = TRUE,            dir = \"results_powoGenera/\",            filename = \"Arist_Begon_Martyniaceae_search\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_accepted_genera.html","id":"mining-all-accepted-genera-for-all-angiosperm-families","dir":"Articles","previous_headings":"","what":"Mining all accepted genera for all angiosperm families","title":"Mining genus list for any plant family","text":"mine global genus checklist associated species number distribution families flowering plants, recommend load dataframe-formatted data object called POWOcodes comes associated expowo package. POWOcodes data object already contains URI addresses angiosperms families recognized POWO database, just need run code . example shows mine global checklist accepted genera flowering plants using vector angiosperm families associated URI addresses stored POWOcodes object.","code":"data(POWOcodes)  powoGenera(POWOcodes$family,            verbose = TRUE,            save = TRUE,            dir = \"results_powoGenera/\",            filename = \"all_angiosperm_genera\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_accepted_genera.html","id":"narrowing-down-the-powogenera-search-based-on-a-specified-country-vector","dir":"Articles","previous_headings":"","what":"Narrowing down the powoGenera search based on a specified country vector","title":"Mining genus list for any plant family","text":"can also narrow search accepted genera family focus just particular country list countries. just need define vector country names argument country. example , see originally searched genera within families Aristolochiaceae, Lecythidaceae, Fagaceae, Dipterocarpaceae, function returned list genera Aristolochiaceae Lecythidaceae, remaining families genera recorded list countries interest, .e. Argentina, Brazil French Guiana. TABLE 2. powoGenera search based specified country vector.","code":"powoGenera(family = c(\"Aristolochiaceae\", \"Dipterocarpaceae\", \"Fagaceae\", \"Lecythidaceae\"),             country = c(\"Argentina\", \"Brazil\", \"French Guiana\"),            verbose = FALSE,            save = TRUE,            dir = \"results_powoGenera/\",            filename = \"country_constrained_search\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_accepted_genera.html","id":"narrowing-down-the-powogenera-search-based-on-a-specified-genus-vector","dir":"Articles","previous_headings":"","what":"Narrowing down the powoGenera search based on a specified genus vector","title":"Mining genus list for any plant family","text":"may want retrieve information just one list accepted genera given country (list countries). Just like , need define vector genus names argument genus vector country names argument country. example , see searched just genera Asarum Bertholletia families Aristolochiaceae Lecythidaceae, function returned Lecythidaceae genus Bertholletia, Asarum occur provided list countries, .e. Brazil French Guiana. TABLE 3. powoGenera search based specified genus country vectors.","code":"powoGenera(family = c(\"Aristolochiaceae\", \"Lecythidaceae\"),             genus = c(\"Asarum\", \"Bertholletia\"),            country = c(\"Brazil\", \"French Guiana\"),            verbose = TRUE,            save = TRUE,            dir = \"results_powoGenera/\",            filename = \"genus_country_constrained_search\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_accepted_species.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Mining species list for any plant family","text":"Install latest development version expowo GitHub:","code":"#install.packages(\"devtools\") devtools::install_github(\"DBOSlab/expowo\") library(expowo)"},{"path":"https://dboslab.github.io/expowo/articles/mining_accepted_species.html","id":"mining-all-accepted-species-for-any-angiosperm-family","dir":"Articles","previous_headings":"","what":"Mining all accepted species for any angiosperm family","title":"Mining species list for any plant family","text":"function powoSpecies returns dataframe saves CSV file listing accepted species (including hybrid species ), publication, authorship, global geographic distribution country botanical level family flowering plants. global classification botanical divisions follows World Geographical Scheme Recording Plant Distributions, already associated taxon’s distribution POWO. example shows mine accepted species specified vector families. output shown (TABLE 1) simplified version, removed columns (genus, epithet authors) focus display taxonomic distribution data. TABLE 1. general powoSpecies search mining accepted species specific angiosperm families.","code":"res <- powoSpecies(family = c(\"Cabombaceae\", \"Martyniaceae\"),                    hybridspp = FALSE,                    verbose = TRUE,                    save = TRUE,                    dir = \"results_powoSpecies/\",                    filename = \"Cabom_Martyniaceae_search\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_accepted_species.html","id":"narrowing-down-the-powospecies-search-based-on-a-specified-country-vector","dir":"Articles","previous_headings":"","what":"Narrowing down the powoSpecies search based on a specified country vector","title":"Mining species list for any plant family","text":"can also narrow species checklist search family focusing just particular country list countries. just need define vector country names argument . example , note originally searched species within families Aristolochiaceae, Cabombaceae, Martyniaceae, function returned smaller species list, many species searched families recorded specified vector country, .e. Brazil Colombia. TABLE 2. powoSpecies search based specified country vector.","code":"powoSpecies(family = c(\"Aristolochiaceae\", \"Cabombaceae\", \"Martyniaceae\"),             hybridspp = FALSE,             country = c(\"Brazil\", \"Colombia\"),             verbose = TRUE,             save = F,             dir = \"results_powoSpecies/\",             filename = \"country_constrained_search\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_accepted_species.html","id":"narrowing-down-the-powospecies-search-based-on-a-specified-genus-and-country-vector","dir":"Articles","previous_headings":"","what":"Narrowing down the powoSpecies search based on a specified genus and country vector","title":"Mining species list for any plant family","text":"may want retrieve information just one list accepted genera given country (list countries). Just like , need define vector genus names argument vector country names argument . example , see searched just genera Proboscidea Cabomba families Martyniaceae Cabombaceae, function returned Cabombaceae genus Cabomba, Proboscidea occur provided list countries, .e. Argentina, French Guiana, Brazil. TABLE 3. powoSpecies search based specified genus country vectors.","code":"powoSpecies(family = c(\"Martyniaceae\", \"Cabombaceae\"),             genus = c(\"Proboscidea\", \"Cabomba\"),             hybridspp = FALSE,             country = c(\"Argentina\", \"French Guiana\", \"Brazil\"),             verbose = TRUE,             save = F,             dir = \"results_powoSpecies/\",             filename = \"country_and_genus_constrained_search\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_accepted_species.html","id":"mining-all-accepted-species-for-all-angiosperm-families","dir":"Articles","previous_headings":"","what":"Mining all accepted species for all angiosperm families","title":"Mining species list for any plant family","text":"mine species checklist families flowering plants, recommend load dataframe-formatted data object called POWOcodes comes associated expowo package. POWOcodes data object already contains URI addresses angiosperms families recognized POWO database, just need call R environment. example shows mine global checklist accepted species flowering plants using vector angiosperm families associated URI addresses stored POWOcodes object.","code":"utils::data(\"POWOcodes\")  powoSpecies(POWOcodes$family,             hybridspp = TRUE,             verbose = TRUE,             save = TRUE,             dir = \"results_powoSpecies/\",             filename = \"all_angiosperm_species\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_family_species_number.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Mining species number of any plant family","text":"Install latest development version expowo GitHub:","code":"#install.packages(\"devtools\") devtools::install_github(\"DBOSlab/expowo\") library(expowo)"},{"path":"https://dboslab.github.io/expowo/articles/mining_family_species_number.html","id":"mining-the-total-species-number-for-any-angiosperm-family","dir":"Articles","previous_headings":"","what":"Mining the total species number for any angiosperm family","title":"Mining species number of any plant family","text":"function powoFam returns dataframe saves CSV file listing total species number (excluding hybrid species) queried plant families. example shows mine total species number defining vector three families: Cabombaceae, Lecythidaceae, Martyniaceae. resulting output (TABLE 1) also saved directly specified directory results_powoFam. TABLE 1. general powoFam search mining total species number three angiosperm families.","code":"powoFam(family = c(\"Cabombaceae\", \"Lecythidaceae\", \"Martyniaceae\"),         verbose = TRUE,         save = TRUE,         dir = \"results_powoFam/\",         filename = \"Camb_Lecy_Martyniaceae_diversity\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_family_species_number.html","id":"mining-species-number-accross-all-angiosperm-families","dir":"Articles","previous_headings":"","what":"Mining species number accross all angiosperm families","title":"Mining species number of any plant family","text":"mine species number families flowering plants, recommend load data frame-formatted object called POWOcodes comes associated expowo package. POWOcodes data object already contains URI addresses angiosperms families recognized POWO database, just need call R environment. example shows mine species number plant families using vector angiosperm families associated URI addresses stored POWOcodes object.","code":"utils::data(POWOcodes)  powoFam(POWOcodes$family,         verbose = TRUE,         save = TRUE,         dir = \"results_powoFam/\",         filename = \"all_angiosperms_species_number\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_megadiverse_genera.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Mining megadiverse genera of flowering plants","text":"Install latest development version expowo GitHub:","code":"#install.packages(\"devtools\") devtools::install_github(\"DBOSlab/expowo\") library(expowo)"},{"path":"https://dboslab.github.io/expowo/articles/mining_megadiverse_genera.html","id":"mining-megadiverse-genera-for-any-angiosperm-family","dir":"Articles","previous_headings":"","what":"Mining megadiverse genera for any angiosperm family","title":"Mining megadiverse genera of flowering plants","text":"function megaGen uses specified threshold number return dataframe save CSV file listing megadiverse genera family flowering plants associated number accepted species. example, performed search three plant families using threshold 500 species, output contains results Aristolochia Begonia Aristolochiaceae Begoniaceae families. TABLE 1. general megaGen search mining megadiverse genera specific angiosperm families, based specified threshold 500 species.","code":"megaGen(family = c(\"Aristolochiaceae\", \"Begoniaceae\", \"Martyniaceae\"),         thld = 500,         verbose = TRUE,         save = TRUE,         dir = \"results_megaGen/\",         filename = \"Arist_Begon_Martyniaceae_search\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_megadiverse_genera.html","id":"mining-megadiverse-genera-accross-all-angiosperm-families","dir":"Articles","previous_headings":"","what":"Mining megadiverse genera accross all angiosperm families","title":"Mining megadiverse genera of flowering plants","text":"mine global checklist megadiverse genera families flowering plants, including associated species number, recommend load dataframe-formatted data object called POWOcodes comes associated expowo package. POWOcodes data object already contains URI addresses angiosperms families recognized POWO database, just need call R environment. example shows mine global checklist speciose genera flowering plants using vector angiosperm families associated URI addresses stored POWOcodes object.","code":"data(POWOcodes)  megaGen(POWOcodes$family,         thld = 500,         verbose = TRUE,         save = TRUE,         dir = \"results_megaGen/\",         filename = \"all_megadiverse_angiosperm_genera\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_species_distribution.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Mining distribution for any plant species","text":"Install latest development version expowo GitHub:","code":"#install.packages(\"devtools\") devtools::install_github(\"DBOSlab/expowo\") library(expowo)"},{"path":"https://dboslab.github.io/expowo/articles/mining_species_distribution.html","id":"mining-the-distribution-for-any-angiosperm-species","dir":"Articles","previous_headings":"","what":"Mining the distribution for any angiosperm species","title":"Mining distribution for any plant species","text":"function powoSpDist returns dataframe saves CSV file listing entire global distribution country botanical level given species scientific name(s) (excluding hybrid species), genus, publication authorship. global classification botanical divisions follows World Geographical Scheme Recording Plant Distributions, already associated taxon’s distribution POWO. example shows mine distribution specified vector two species. output shown (table) simplified removing family distribution according botanical subdivision columns. TABLE 1. general powoSpDist search mining distribution two angiosperm species.","code":"powoSpDist(family = c(\"Begoniaceae\", \"Lecythidaceae\"),            species = c(\"Hillebrandia sandwicensis\", \"Lecythis pisonis\"),            verbose = TRUE,            save = TRUE,            dir = \"results_powoSpDist/\",            filename = \"Begoniaceae_Lecythidaceae\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_species_distribution.html","id":"mining-distribution-for-all-angiosperm-species","dir":"Articles","previous_headings":"","what":"Mining distribution for all angiosperm species","title":"Mining distribution for any plant species","text":"mine distribution checklist accepted species flowering plants, can load dataframe-formatted data object called POWOcodes comes associated expowo package. POWOcodes data object already contains URI addresses angiosperms families recognized POWO database, just need call R environment. example shows mine global distribution accepted non hybrid species flowering plants using vector angiosperm families associated URI addresses stored POWOcodes object. Note argument species NULL, search constrained particular species, .e. function return global distribution species queried families.","code":"data(POWOcodes)  powoSpDist(POWOcodes$family,            species = NULL,            verbose = TRUE,            save = TRUE,            dir = \"results_powoSpDist/\",            filename = \"all_angiosperm_distribution\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_toprichest_genera.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Mining the top richest genera of flowering plants","text":"Install latest development version expowo GitHub:","code":"#install.packages(\"devtools\") devtools::install_github(\"DBOSlab/expowo\") library(expowo)"},{"path":"https://dboslab.github.io/expowo/articles/mining_toprichest_genera.html","id":"mining-the-top-richest-genera-for-any-angiosperm-family","dir":"Articles","previous_headings":"","what":"Mining the top richest genera for any angiosperm family","title":"Mining the top richest genera of flowering plants","text":"function topGen relatively similar megaGen, instead using specific threshold species number considered big genera, saves CSV file listing top species-rich genera target angiosperm family, associated number accepted species based integer number set argument limit. example , used default search top ten richest genera (.e., argument limit set NULL, function searchs 10 diverse genera within plant family). columns omitted display results, rows show top ten three chosen families: Bignoniaceae, Solanaceae Lecythidaceae. Note table 30 rows, expected multiply family (n = 3) ten. error, since plant families many genera, case Begoniaceae 2 genera. TABLE 1. general topGen search mining top species rich genera specific angiosperm families.","code":"topGen(family = c(\"Aristolochiaceae\", \"Begoniaceae\", \"Lecythidaceae\"),        limit = NULL,        verbose = TRUE,        save = TRUE,        dir = \"results_topGen/\",        filename = \"Aristo_Bego_Lecythidaceae_search\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_toprichest_genera.html","id":"mining-the-top-richest-genera-accross-all-angiosperm-families","dir":"Articles","previous_headings":"","what":"Mining the top richest genera accross all angiosperm families","title":"Mining the top richest genera of flowering plants","text":"mine global checklist top species-richest genera families flowering plants, including associated species number, recommend load dataframe-formatted data object called POWOcodes comes associated expowo package. POWOcodes data object already contains URI addresses angiosperms families recognized POWO database, just need call R environment. example shows mine top species-rich genera flowering plants using vector angiosperm families, associated URI addresses stored POWOcodes object limit 10 genera family.","code":"data(POWOcodes)  topGen(POWOcodes$family,        limit = 10,        verbose = TRUE,        save = TRUE,        dir = \"results_topGen/\",        filename = \"all_toprichest_angiosperm_genera\")"},{"path":"https://dboslab.github.io/expowo/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Debora Zuanny. Author, maintainer, copyright holder. Domingos Cardoso. Author, contributor, copyright holder.","code":""},{"path":"https://dboslab.github.io/expowo/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zuanny D, Cardoso D (2023). expowo: R Package Mining Global Plant Diversity Distribution Data. https://dboslab.github.io/expowo/, https://github.com/dboslab/expowo.","code":"@Manual{,   title = {expowo: An R Package for Mining Global Plant Diversity and Distribution Data},   author = {Debora Zuanny and Domingos Cardoso},   year = {2023},   note = {https://dboslab.github.io/expowo/, https://github.com/dboslab/expowo}, }"},{"path":"https://dboslab.github.io/expowo/index.html","id":"expowo-","dir":"","previous_headings":"","what":"An R Package for Mining Global Plant Diversity and Distribution Data","title":"An R Package for Mining Global Plant Diversity and Distribution Data","text":"R package mining species checklist, diversity estimates, distribution data genus family flowering plants RGB Kew’s Plants World Online (POWO).","code":""},{"path":"https://dboslab.github.io/expowo/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"An R Package for Mining Global Plant Diversity and Distribution Data","text":"main goal expowo package retrieve information diversity distribution plant family publicly available taxonomically verified database Plants World Online (POWO). package intended efficiently mine content within source HTML pages specific genus family. can return comma-separated values (CSV) file number accepted species country-level distribution genus well full checklist accepted species genus family, authorship, original publication global distribution.","code":""},{"path":[]},{"path":"https://dboslab.github.io/expowo/index.html","id":"update-r-and-rstudio-versions","dir":"","previous_headings":"Before using expowo","what":"Update R and RStudio versions","title":"An R Package for Mining Global Plant Diversity and Distribution Data","text":"Please make sure installed latest versions R (Mac OS, Windows) RStudio (Mac OS / Windows: choose free version).","code":""},{"path":"https://dboslab.github.io/expowo/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R Package for Mining Global Plant Diversity and Distribution Data","text":"can install latest development version expowo GitHub using devtools package following R code: OBS.: download development version, need Git software installed. operating system Microsoft Windows, also need download Rtools. Otherwise, able install expowo easily available CRAN, just running following R code:","code":"install.packages(\"devtools\") devtools::install_github(\"DBOSlab/expowo\") library(expowo) install.packages(\"expowo\") library(expowo)"},{"path":"https://dboslab.github.io/expowo/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"An R Package for Mining Global Plant Diversity and Distribution Data","text":"package’s four major functions (powoGenera, powoSpecies, megaGen, toptenGen) require name target family (vector multiple family names) associated specific URI (Uniform Resource Identifier) identifies HTML page family POWO. four major functions work three auxiliary functions (getGenURI, getNumb, getDist) mine plant data. Respectively, getGenURI mines URI genus, getNumb mines total number species within genus, getDist complete search native introduced country-level distribution genus species. get POWO URI accepted plant family, can either look data frame object POWOcodes come together installed expowo package, can use function get_pow package taxize. , vector URI codes main input file everything can expowo package. See examples use expowo’s major functions mining basic information global plant diversity distribution ‘Articles’ section site.","code":""},{"path":"https://dboslab.github.io/expowo/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"An R Package for Mining Global Plant Diversity and Distribution Data","text":"detailed description expowo’s full functionality available . expowo package continuously constructed. want make suggestions, let us know! hope helpful botanical research!","code":""},{"path":"https://dboslab.github.io/expowo/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"An R Package for Mining Global Plant Diversity and Distribution Data","text":"Zuanny, D. & Cardoso, D. (2022). expowo: R package mining plant diversity distribution data. https://github.com/DBOSlab/expowo","code":""},{"path":"https://dboslab.github.io/expowo/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 expowo authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://dboslab.github.io/expowo/reference/angioData.html","id":null,"dir":"Reference","previous_headings":"","what":"List of Angiosperm species — angioData","title":"List of Angiosperm species — angioData","text":"Complete list non-hybrid species associated data Lecythidaceae, Aristolochiaceae, Martyniaceae, Cabombaceae Begoniaceae retrieved POWO database function powoSpecies package gathered Nov 2022","code":""},{"path":"https://dboslab.github.io/expowo/reference/angioData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of Angiosperm species — angioData","text":"","code":"data(angioData)"},{"path":"https://dboslab.github.io/expowo/reference/angioData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List of Angiosperm species — angioData","text":"Dataframe","code":""},{"path":"https://dboslab.github.io/expowo/reference/angioGenera.html","id":null,"dir":"Reference","previous_headings":"","what":"List of Angiosperm genera — angioGenera","title":"List of Angiosperm genera — angioGenera","text":"Complete list genera associated data Lecythidaceae, Aristolochiaceae, Begoniaceae, Martyniaceae, Dipterocarpaceae, Fagaceae retrieved POWO database function powoGenera package gathered Jan 2023","code":""},{"path":"https://dboslab.github.io/expowo/reference/angioGenera.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of Angiosperm genera — angioGenera","text":"","code":"data(angioGenera)"},{"path":"https://dboslab.github.io/expowo/reference/angioGenera.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List of Angiosperm genera — angioGenera","text":"Dataframe","code":""},{"path":"https://dboslab.github.io/expowo/reference/botdivmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Global map of botanical country subdivisions — botdivmap","title":"Global map of botanical country subdivisions — botdivmap","text":"Global-scale map botanical countries (level 3) according World Geographical Scheme Recording Plant Distributions (WGSRPD)","code":""},{"path":"https://dboslab.github.io/expowo/reference/botdivmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global map of botanical country subdivisions — botdivmap","text":"","code":"data(botdivmap)"},{"path":"https://dboslab.github.io/expowo/reference/botdivmap.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Global map of botanical country subdivisions — botdivmap","text":"Sf Dataframe","code":""},{"path":"https://dboslab.github.io/expowo/reference/botdivmap.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Global map of botanical country subdivisions — botdivmap","text":"https://www.tdwg.org/standards/wgsrpd/","code":""},{"path":"https://dboslab.github.io/expowo/reference/botregions.html","id":null,"dir":"Reference","previous_headings":"","what":"Countries and associated classification of botanical divisions — botregions","title":"Countries and associated classification of botanical divisions — botregions","text":"Countries associated classification botanical divisions according World Geographical Scheme Recording Plant Distributions","code":""},{"path":"https://dboslab.github.io/expowo/reference/botregions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Countries and associated classification of botanical divisions — botregions","text":"","code":"data(botregions)"},{"path":"https://dboslab.github.io/expowo/reference/botregions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Countries and associated classification of botanical divisions — botregions","text":"Table .csv format","code":""},{"path":"https://dboslab.github.io/expowo/reference/botregions.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Countries and associated classification of botanical divisions — botregions","text":"https://www.tdwg.org/standards/wgsrpd/","code":""},{"path":"https://dboslab.github.io/expowo/reference/megaGen.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract megadiverse genera from POWO — megaGen","title":"Extract megadiverse genera from POWO — megaGen","text":"produces CSV file listing megadiverse genera angiosperm family Plants World Online (POWO). numeric value define threshold considered megadiverse genus. Frodin, D.G.(2004) Taxon suggests 500 species threshold megadiverse genus.","code":""},{"path":"https://dboslab.github.io/expowo/reference/megaGen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract megadiverse genera from POWO — megaGen","text":"","code":"megaGen(family, thld = NULL, verbose = TRUE, save = TRUE, dir, filename)"},{"path":"https://dboslab.github.io/expowo/reference/megaGen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract megadiverse genera from POWO — megaGen","text":"family Either one family name vector multiple families present POWO. thld defined threshold species number genus considered megadiverse. threshold number provided, function consider value 500 based Frodin, D.G.(2004) Taxon. verbose Logical, FALSE, searched results printed console full. save Logical, FALSE, searched results saved disk. dir Pathway computer's directory, file saved provided argument save set TRUE. default create directory named results_megaGen searched results saved within subfolder named current date. filename Name output file saved. Default create file entitled output.","code":""},{"path":"https://dboslab.github.io/expowo/reference/megaGen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract megadiverse genera from POWO — megaGen","text":"Table .csv format saved disk.","code":""},{"path":[]},{"path":"https://dboslab.github.io/expowo/reference/megaGen.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract megadiverse genera from POWO — megaGen","text":"Debora Zuanny & Domingos Cardoso","code":""},{"path":"https://dboslab.github.io/expowo/reference/megaGen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract megadiverse genera from POWO — megaGen","text":"","code":"if (FALSE) {  library(expowo)  megaGen(family = \"Lecythidaceae\",         thld = 500,         verbose = TRUE,         save = TRUE,         dir = \"results_megaGen/\",         filename = \"Lecythidaceae\")  ## Searching for all big angiosperm genera in any or all families, ## by using the family names and URI addresses within the POWOcodes ## data file.  data(POWOcodes)  megaGen(POWOcodes$family,         thld = 500,         verbose = TRUE,         save = TRUE,         dir = \"results_megaGen/\",         filename = \"megadiverse_plant_genera\") }"},{"path":"https://dboslab.github.io/expowo/reference/POWOcodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete list of angiosperm families and associated URI addresses — POWOcodes","title":"Complete list of angiosperm families and associated URI addresses — POWOcodes","text":"Complete list APG IV-based families flowering plants associated URI addresses retrieved function get_pow package taxize","code":""},{"path":"https://dboslab.github.io/expowo/reference/POWOcodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete list of angiosperm families and associated URI addresses — POWOcodes","text":"","code":"data(POWOcodes)"},{"path":"https://dboslab.github.io/expowo/reference/POWOcodes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Complete list of angiosperm families and associated URI addresses — POWOcodes","text":"Dataframe","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoFam.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract species number of any plant family from POWO — powoFam","title":"Extract species number of any plant family from POWO — powoFam","text":"produces CSV file listing number species within target botanical families flowering plants available Plants World Online (POWO).","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoFam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract species number of any plant family from POWO — powoFam","text":"","code":"powoFam(family, verbose = TRUE, save = TRUE, dir, filename)"},{"path":"https://dboslab.github.io/expowo/reference/powoFam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract species number of any plant family from POWO — powoFam","text":"family Either one family name vector multiple families present POWO. verbose Logical, FALSE, search results printed console full. save Logical, FALSE, search results saved. dir Pathway computer's directory, file saved provided argument save set TRUE. default create directory named results_powoFam searched results saved within subfolder named current date. filename Name output file saved. Default create file entitled output.","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoFam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract species number of any plant family from POWO — powoFam","text":"Table .csv format saved disk.","code":""},{"path":[]},{"path":"https://dboslab.github.io/expowo/reference/powoFam.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract species number of any plant family from POWO — powoFam","text":"Debora Zuanny & Domingos Cardoso","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoFam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract species number of any plant family from POWO — powoFam","text":"","code":"if (FALSE) { library(expowo)  powoFam(family = \"Lecythidaceae\",         verbose = TRUE,         save = TRUE,         dir = \"results_powoFam/\",         filename = \"Lecythidaceae\")  ## Searching for the species number of in any or all flowering plant ## families, by using the family names and addresses within the POWOcodes ## data file.  data(POWOcodes)  powoFam(POWOcodes$family,         verbose = TRUE,         save = TRUE,         dir = \"results_powoFam/\",         filename = \"all_angiosperms_species_number\") }"},{"path":"https://dboslab.github.io/expowo/reference/powoGenera.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract list of genera from POWO — powoGenera","title":"Extract list of genera from POWO — powoGenera","text":"produces CSV file listing genera associated number accepted species geographical distribution angiosperm family Plants World Online (POWO).","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoGenera.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract list of genera from POWO — powoGenera","text":"","code":"powoGenera(family, genus = NULL, country = NULL,            verbose = TRUE, save = TRUE, dir, filename)"},{"path":"https://dboslab.github.io/expowo/reference/powoGenera.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract list of genera from POWO — powoGenera","text":"family Either one family name vector multiple families present POWO. genus Either one genus name vector multiple genera present POWO. genus name provided, function search accepted genera known target family. country Either one country name vector multiple countries. country names provided, function return genera native countries, according POWO. verbose Logical, FALSE, searched results printed console full. save Logical, FALSE, searched results saved disk. dir Pathway computer's directory, file saved provided argument save set TRUE. default create directory named results_powoGenera searched results saved within subfolder named current date. filename Name output file saved. Default create file entitled output.","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoGenera.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract list of genera from POWO — powoGenera","text":"Table .csv format saves output disk.","code":""},{"path":[]},{"path":"https://dboslab.github.io/expowo/reference/powoGenera.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract list of genera from POWO — powoGenera","text":"Debora Zuanny & Domingos Cardoso","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoGenera.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract list of genera from POWO — powoGenera","text":"","code":"if (FALSE) { library(expowo)  powoGenera(family = \"Lecythidaceae\",            verbose = TRUE,            save = TRUE,            dir = \"results_powoGenera/\",            filename = \"Lecythidaceae\")  powoGenera(family = \"Lecythidaceae\",            genus = \"Bertholletia\",            country = c(\"Argentina\", \"Brazil\", \"French Guiana\"),            verbose = TRUE,            save = TRUE,            dir = \"results_powoGenera/\",            filename = \"Lecythidaceae\")  ## Searching for all genera and associated species number and ## global distribution in any or all angiosperm families, ## by using the family names and URI addresses within the POWOcodes ## data file.  data(POWOcodes)  powoGenera(POWOcodes$family,            verbose = TRUE,            save = TRUE,            dir = \"results_powoGenera/\",            filename = \"all_angiosperm_genera\") }"},{"path":"https://dboslab.github.io/expowo/reference/powoMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Create global maps of species richness — powoMap","title":"Create global maps of species richness — powoMap","text":"produces global-scale maps species richness country botanical country levels genus family flowering plants associated species distribution data Plants World Online (POWO).","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create global maps of species richness — powoMap","text":"","code":"powoMap(data = NULL,         botctrs = NULL,         map_div = \"native_to_country\",         multigen = FALSE,         verbose = TRUE,         vir_color = \"viridis\",         bre_color = NULL,         leg_title = \"SR\",         dpi = 600,         dir = \"results_powoMap/\",         filename = \"global_richness_map\",         format = \"jpg\")"},{"path":"https://dboslab.github.io/expowo/reference/powoMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create global maps of species richness — powoMap","text":"data data frame species' global distribution country botanical country level created function powoSpecies. botctrs object class sf data.frame botanical country division World. object comes expowo's data package botdivmap. map_div One two column names native distribution input data either created powoSpecies external spreadsheet. default argument \"native_to_country\" generate global species richness maps country level. choosing \"native_to_botanical_countries\" global species richness maps colored according level 3 botanical subdivision World Geographical Scheme Recording Plant Distributions. make sure provided argument botctrs World's botanical country divisions botdivmap. input generated external sources, data columns spreadsheet must match standardized output powoSpecies. multigen Logical, TRUE, function produce multiple global maps every single genus within input data. verbose Logical, FALSE, map creation steps printed console full. vir_color character vector name code color palettes Viridis package. bre_color character vector name code color palettes RColorBrewer package. leg_title character vector displayed output map legend. Default create one title called SR, means species richness. dpi One number range 72-4000 referring image resolution format dots per inch output file. Default create output 600 dpi. dir Pathway computer's directory, map file saved provided argument save set TRUE. default create directory named results_powoMap/ search results saved within subfolder named current date. filename Name output file saved. Default create file entitled global_richness_map. format character vector related file format global map saved. default \"jpg\" save output Joint Photographic Experts Group (.jpg), can also choose \"pdf\" save Portable Document Format (.pdf), \"tiff\" save Tag Image File Format (.tiff) \"png\" save Portable Network Graphics (.png).","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create global maps of species richness — powoMap","text":"Global map .pdf format saves output disk.","code":""},{"path":[]},{"path":"https://dboslab.github.io/expowo/reference/powoMap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create global maps of species richness — powoMap","text":"Debora Zuanny & Domingos Cardoso","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoMap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create global maps of species richness — powoMap","text":"","code":"if (FALSE) { library(expowo) library(taxize)  powocodes <- cbind(family = \"Lecythidaceae\",                    data.frame(taxize::get_pow(\"Lecythidaceae\")))  mapspdist <- powoSpecies(powocodes$family, powocodes$uri,                          hybridspp = FALSE,                          country = NULL,                          verbose = TRUE,                          save = TRUE,                          dir = \"results_powoSpecies/\",                          filename = \"Lecythidaceae\")  # To create a map according to political countries powoMap(data = mapspdist,         botctrs = NULL,         map_div = \"native_to_country\",         multigen = TRUE,         verbose = FALSE,         vir_color = \"viridis\",         bre_color = NULL,         leg_title = \"SR\",         dpi = 600,         dir = \"results_powoMap/\",         filename = \"global_richness_country_map\",         format = \"jpg\")  # To create a map according to botanical countries subdivision data(botdivmap) powoMap(data = mapspdist,         botctrs = botdivmap,         map_div = \"native_to_botanical_countries\",         multigen = TRUE,         verbose = FALSE,         vir_color = \"viridis\",         bre_color = NULL,         leg_title = \"SR\",         dpi = 600,         dir = \"results_powoMap/\",         filename = \"global_richness_botcountry_map\",         format = \"jpg\") }"},{"path":"https://dboslab.github.io/expowo/reference/powoSpDist.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract list of species distribution from POWO — powoSpDist","title":"Extract list of species distribution from POWO — powoSpDist","text":"produces CSV file listing geographical distribution target species flowering plants available Plants World Online (POWO).","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoSpDist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract list of species distribution from POWO — powoSpDist","text":"","code":"powoSpDist(family, species = NULL,             verbose = TRUE, save = TRUE, dir, filename)"},{"path":"https://dboslab.github.io/expowo/reference/powoSpDist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract list of species distribution from POWO — powoSpDist","text":"family Either single family name vector multiple families present POWO. species Either one non hybrid species name vector multiple species present POWO. species name provided, function search species accepted genera known target family. verbose Logical, FALSE, search results printed console full. save Logical, FALSE, search results saved disk. dir Pathway computer's directory, file saved provided argument save set TRUE. default create directory named results_powoSpDist search results saved within subfolder named current date. filename Name output file saved. Default create file entitled output.","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoSpDist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract list of species distribution from POWO — powoSpDist","text":"Table .csv format saves output disk.","code":""},{"path":[]},{"path":"https://dboslab.github.io/expowo/reference/powoSpDist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract list of species distribution from POWO — powoSpDist","text":"Debora Zuanny & Domingos Cardoso","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoSpDist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract list of species distribution from POWO — powoSpDist","text":"","code":"if (FALSE) { library(expowo)  powoSpDist(family = \"Lecythidaceae\",            species = \"Lecythis pisonis\",            verbose = TRUE,            save = TRUE,            dir = \"results_powoSpDist/\",            filename = \"L_pisonis\")  ## Searching for global distribution of species in any or all flowering ## plant familyusing the associated data POWOcodes.  data(POWOcodes)  powoSpDist(POWOcodes$family,            verbose = TRUE,            save = TRUE,            dir = \"results_powoSpDist/\",            filename = \"all_angiosperm_species_dist\") }"},{"path":"https://dboslab.github.io/expowo/reference/powoSpecies.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract list of species from POWO — powoSpecies","title":"Extract list of species from POWO — powoSpecies","text":"produces CSV file listing accepted species associated geographical distribution target genus family flowering plants Plants World Online (POWO).","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoSpecies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract list of species from POWO — powoSpecies","text":"","code":"powoSpecies(family, genus = NULL, hybridspp = FALSE, country = NULL,             verbose = TRUE, save = TRUE, dir, filename)"},{"path":"https://dboslab.github.io/expowo/reference/powoSpecies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract list of species from POWO — powoSpecies","text":"family Either single family name vector multiple families present POWO. genus Either one genus name vector multiple genera present POWO. genus name provided, function search species accepted genera known target family. hybridspp Logical, TRUE, search results include hybrid species. country Either one country name vector multiple countries. country names provided, function return species native countries, according POWO. verbose Logical, FALSE, search results printed console full. save Logical, FALSE, search results saved disk. dir Pathway computer's directory, file saved provided argument save set TRUE. default create directory named results_powoSpecies search results saved within subfolder named current date. filename Name output file saved. Default create file entitled output.","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoSpecies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract list of species from POWO — powoSpecies","text":"Table .csv format saves output disk.","code":""},{"path":[]},{"path":"https://dboslab.github.io/expowo/reference/powoSpecies.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract list of species from POWO — powoSpecies","text":"Debora Zuanny & Domingos Cardoso","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoSpecies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract list of species from POWO — powoSpecies","text":"","code":"if (FALSE) { library(expowo)  powoSpecies(family = \"Lecythidaceae\",             hybridspp = FALSE,             country = c(\"Argentina\", \"Brazil\", \"French Guiana\"),             verbose = TRUE,             save = TRUE,             dir = \"results_powoSpecies/\",             filename = \"Lecythidaceae\")  ## Searching for all species and associated global distribution ## in any or all flowering plant genera, by using the family name and URI ## addresses within the POWOcodes data file.  data(POWOcodes)  powoSpecies(POWOcodes$family,             hybridspp = TRUE,             verbose = TRUE,             save = TRUE,             dir = \"results_powoSpecies/\",             filename = \"all_angiosperm_species\") }"},{"path":"https://dboslab.github.io/expowo/reference/topGen.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the top most species-rich genera — topGen","title":"Extract the top most species-rich genera — topGen","text":"produces CSV file listing top diverse genera target botanical family flowering plants Plants World Online (POWO).","code":""},{"path":"https://dboslab.github.io/expowo/reference/topGen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the top most species-rich genera — topGen","text":"","code":"topGen(family, limit, verbose = TRUE, save = TRUE, dir, filename)"},{"path":"https://dboslab.github.io/expowo/reference/topGen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the top most species-rich genera — topGen","text":"family Either one family name vector multiple families present POWO. limit defined numerical limit diverse genera selected within plant family. limit number provided, function select top ten genera. verbose Logical, FALSE, search results printed console full. save Logical, FALSE, search results saved. dir Pathway computer's directory, file saved provided argument save set TRUE. default create directory named results_topGen searched results saved within subfolder named current date. filename Name output file saved. Default create file entitled output.","code":""},{"path":"https://dboslab.github.io/expowo/reference/topGen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the top most species-rich genera — topGen","text":"Table .csv format saved disk.","code":""},{"path":[]},{"path":"https://dboslab.github.io/expowo/reference/topGen.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract the top most species-rich genera — topGen","text":"Debora Zuanny & Domingos Cardoso","code":""},{"path":"https://dboslab.github.io/expowo/reference/topGen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the top most species-rich genera — topGen","text":"","code":"if (FALSE) { library(expowo)  topGen(family = \"Lecythidaceae\",        limit = 10,        verbose = TRUE,        save = TRUE,        dir = \"results_topGen/\",        filename = \"Lecythidaceae\")  ## Searching for the top most diverse genera ## in any or all flowering plant families, by using ## the family names and addresses within the POWOcodes data file.  data(POWOcodes)  topGen(POWOcodes$family,        limit = 10,        verbose = TRUE,        save = TRUE,        dir = \"results_topGen/\",        filename = \"topdiverse_plant_genera\") }"}]
