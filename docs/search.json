[{"path":"https://dboslab.github.io/expowo/articles/associated_data.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Associated data","text":"Install latest development version expowo GitHub:","code":"#install.packages(\"devtools\") devtools::install_github(\"DBOSlab/expowo\") library(expowo)"},{"path":"https://dboslab.github.io/expowo/articles/associated_data.html","id":"powocodes---a-complete-list-of-angiosperm-families-and-associated-uri-addresses","dir":"Articles","previous_headings":"","what":"POWOcodes - A complete list of angiosperm families and associated URI addresses","title":"Associated data","text":"POWOcodes data dataframe containing list families flowering plants available POWO database, according APG IV’s classification. produced using functions apgFamilies get_pow package taxize. POWOcodes data useful purpose query many plant families . addition names POWO’s accepted plant families, required search expowo’s functions, data package corresponding family’s URI, used internally function opening connection family page Plants World Online. call associated data R environment, use code :","code":"utils::data(\"POWOcodes\")"},{"path":"https://dboslab.github.io/expowo/articles/associated_data.html","id":"angiodata---a-dataframe-of-angiosperm-species","dir":"Articles","previous_headings":"","what":"angioData - A dataframe of Angiosperm species","title":"Associated data","text":"angioData dataframe-formatted list species families flowering plants associated data, retrieved POWO database using expowo’s function powoSpecies. publication purposes package size limitation, selected families include associated data let information easily available. Currently, species five plant families listed Table 1. last update data Nov 2022. TABLE 1. plant families species number within angioData.  addition accepted species (excluding hybrid species) families , angioData also contains publication, authorship, global geographic distribution country botanical level species. global classification botanical divisions follows World Geographical Scheme Recording Plant Distributions, already associated taxon’s distribution POWO. example shows call angioData:","code":"utils::data(\"angioData\")"},{"path":"https://dboslab.github.io/expowo/articles/associated_data.html","id":"angiogenera---a-dataframe-of-angiosperm-genera","dir":"Articles","previous_headings":"","what":"angioGenera - A dataframe of Angiosperm genera","title":"Associated data","text":"angioGenera comprises genera families flowering plants associated data mined POWO database using powoGenera. publication purposes package size limitation, selected families include associated data let information easily available. Currently, six plant families (Lecythidaceae, Aristolochiaceae, Begoniaceae, Martyniaceae, Dipterocarpaceae, Fagaceae) listed Table 2. last update data Nov 2022. TABLE 2. plant families genera within angioGenera.  addition list accepted genera families, dataframe-formatted angioGenera also contains publication, authorship, species number global geographic distribution country botanical level genus. global classification botanical divisions follows World Geographical Scheme Recording Plant Distributions, already associated taxon’s distribution POWO. example shows call angioGenera:","code":"utils::data(\"angioGenera\")"},{"path":"https://dboslab.github.io/expowo/articles/associated_data.html","id":"botregions---countries-and-associated-classification-of-botanical-divisions","dir":"Articles","previous_headings":"","what":"botregions - Countries and associated classification of botanical divisions","title":"Associated data","text":"botregions data package dataframe containing countries World associated classification botanical divisions according World Geographical Scheme Recording Plant Distributions. built using custim script specific functions packages rgdal, ggplot2, broom, sf raster (original script can made available upon request). dataset useful purpose query distribution data divisions world expowo ’s functions convert country names. call associated data R environment, use code :","code":"utils::data(\"botregions\")"},{"path":"https://dboslab.github.io/expowo/articles/data_package.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Associated data","text":"Install latest development version expowo GitHub:","code":"#install.packages(\"devtools\") devtools::install_github(\"DBOSlab/expowo\") library(expowo)"},{"path":"https://dboslab.github.io/expowo/articles/data_package.html","id":"powocodes---a-complete-list-of-angiosperm-families-and-associated-uri-addresses","dir":"Articles","previous_headings":"","what":"POWOcodes - A complete list of angiosperm families and associated URI addresses","title":"Associated data","text":"POWOcodes data dataframe containing list families flowering plants available POWO database, according APG IV’s classification. produced using functions apgFamilies get_pow package taxize. POWOcodes data useful purpose query many plant families . addition names POWO’s accepted plant families, required search expowo’s functions, data package corresponding family’s URI, used internally function opening connection family page Plants World Online. call associated data R environment, use code :","code":"utils::data(\"POWOcodes\")"},{"path":"https://dboslab.github.io/expowo/articles/data_package.html","id":"angiodata---a-dataframe-of-angiosperm-species","dir":"Articles","previous_headings":"","what":"angioData - A dataframe of Angiosperm species","title":"Associated data","text":"angioData dataframe-formatted list species families flowering plants associated data, retrieved POWO database using expowo’s function powoSpecies. publication purposes package size limitation, selected families include associated data let information easily available. Currently, species five plant families listed Table 1. last update data Nov 2022. TABLE 1. plant families species number within angioData.  addition accepted species (excluding hybrid species) families , angioData also contains publication, authorship, global geographic distribution country botanical level species. global classification botanical divisions follows World Geographical Scheme Recording Plant Distributions, already associated taxon’s distribution POWO. example shows call angioData:","code":"utils::data(\"angioData\")"},{"path":"https://dboslab.github.io/expowo/articles/data_package.html","id":"angiogenera---a-data-frame-of-angiosperm-genera","dir":"Articles","previous_headings":"","what":"angioGenera - A data frame of Angiosperm genera","title":"Associated data","text":"angioGenera comprises genera families flowering plants associated data mined POWO database using powoGenera. publication purposes package size limitation, selected families include associated data let information easily available. Currently, six plant families (Lecythidaceae, Aristolochiaceae, Begoniaceae, Martyniaceae, Dipterocarpaceae, Fagaceae) listed Table 2. last update data Nov 2022.  TABLE 2. plant families genera within angioGenera.  addition list accepted genera families, dataframe-formatted angioGenera also contains publication, authorship, species number global geographic distribution country botanical level genus. global classification botanical divisions follows World Geographical Scheme Recording Plant Distributions, already associated taxon’s distribution POWO. example shows call angioGenera:","code":"utils::data(\"angioGenera\")"},{"path":"https://dboslab.github.io/expowo/articles/data_package.html","id":"botregions---countries-and-associated-classification-of-botanical-divisions","dir":"Articles","previous_headings":"","what":"botregions - Countries and associated classification of botanical divisions","title":"Associated data","text":"botregions data package dataframe containing countries World associated classification botanical divisions according World Geographical Scheme Recording Plant Distributions. built using custim script specific functions packages rgdal, ggplot2, broom, sf raster (original script can made available upon request). dataset useful purpose query distribution data divisions world expowo ’s functions convert country names. call associated data R environment, use code :","code":"utils::data(\"botregions\")"},{"path":"https://dboslab.github.io/expowo/articles/data_package.html","id":"reference","dir":"Articles","previous_headings":"","what":"Reference","title":"Associated data","text":"POWO (2019). “Plants World Online. Facilitated Royal Botanic Gardens, Kew. Published Internet; http://www.plantsoftheworldonline.org/ Retrieved Nov 2022.”","code":""},{"path":"https://dboslab.github.io/expowo/articles/mapping_distribution.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Mapping global distribution for any taxonomic level","text":"Install latest development version expowo GitHub:","code":"#install.packages(\"devtools\") devtools::install_github(\"DBOSlab/expowo\") library(expowo)"},{"path":"https://dboslab.github.io/expowo/articles/mapping_distribution.html","id":"mining-species-distribution-from-powo-to-use-as-input-data-in-powomap","dir":"Articles","previous_headings":"","what":"1. Mining species distribution from POWO to use as input data in powoMap","title":"Mapping global distribution for any taxonomic level","text":"create global distribution maps using powoMap function, can either import spreadsheet use package’s powoSpecies function get distribution information species target family genus. possible adjust one arguments powoSpecies function extract data genus list genera. See details another article . example shows mine distribution specific genus Lecythidaceae. defining vector within argument genus, function search species associated distribution data just genus Cariniana. Note create object called mapspdist, dataframe-formatted input data create map. output shown (TABLE 1) simplified version, removed columns focus display just distribution data. TABLE 1. general powoSpecies search mining distribution Lecythidaceae genus Cariniana.","code":"mapspdist <- powoSpecies(family = \"Lecythidaceae\",                           genus = \"Cariniana\",                          hybridspp = FALSE,                          country = NULL,                          verbose = TRUE,                          save = FALSE,                          dir = \"results_powoSpecies\",                          filename = \"Lecythidaceae_Cariniana\")"},{"path":"https://dboslab.github.io/expowo/articles/mapping_distribution.html","id":"creating-global-scale-map-for-one-genus-to-show-species-richness-at-political-country-level","dir":"Articles","previous_headings":"","what":"2. Creating global-scale map for one genus to show species richness at political country level","title":"Mapping global distribution for any taxonomic level","text":"generate global distribution map one genus show species richness political country level, can use previously generated mapspdist object input data powoMap function set distcol argument “native_to_country”. column dataframe-formatted mapspdist object associated species distribution political country. example shows create global distribution map Cariniana’s species richness colored viridis palette Viridis package. set arguments vir_color bre_color Viridis RColorBrewer color palettes, two maps colored respectively color vectors automatically generated. Different file formats resolutions (e.g. JPG, PDF, PNG, TIFF) also supported setting arguments format dpi. FIGURE 1. Global species richness genus Cariniana country level colored viridis scale.","code":"powoMap(inputdf = mapspdist,         botctrs = FALSE,         distcol = \"native_to_country\",         taxclas = \"genus\",         verbose = FALSE,         save = FALSE,         vir_color = \"viridis\",         bre_color = NULL,         leg_title = \"SR\",         dpi = 600,         dir = \"results_powoMap\",         filename = \"global_richness_country_map\",         format = \"jpg\")"},{"path":"https://dboslab.github.io/expowo/articles/mapping_distribution.html","id":"creating-global-scale-map-for-one-genus-to-show-species-richness-at-botanical-country-level","dir":"Articles","previous_headings":"","what":"3. Creating global-scale map for one genus to show species richness at botanical country level","title":"Mapping global distribution for any taxonomic level","text":"generate global distribution map one genus show species richness botanical country level, adjust argument botctrs within powoMap function TRUE. , use previously generated mapspdist object input data inputdf set distcol argument name column distribution according botanical countries quotation marks. column dataframe-formatted mapspdist object external spreadsheet. example shows create global distribution map Cariniana’s species richness according botanical subdivision colored viridis palette Viridis package. set arguments vir_color bre_color Viridis RColorBrewer color palettes, two maps colored respectively color vectors automatically generated. Different file formats resolutions (e.g. JPG, PDF, PNG, TIFF) also supported setting arguments format dpi. FIGURE 2. Global species richness genus Cariniana botanical country level colored viridis scale.","code":"powoMap(inputdf = mapspdist,         botctrs = TRUE,         distcol = \"native_to_botanical_countries\",         taxclas = \"genus\",         verbose = FALSE,         save = FALSE,         vir_color = \"viridis\",         bre_color = NULL,         leg_title = \"SR\",         dpi = 600,         dir = \"results_powoMap\",         filename = \"global_richness_botcountry_map\",         format = \"jpg\")"},{"path":"https://dboslab.github.io/expowo/articles/mapping_distribution.html","id":"creating-global-scale-map-of-species-richness-for-an-entire-family","dir":"Articles","previous_headings":"","what":"4. Creating global-scale map of species richness for an entire family","title":"Mapping global distribution for any taxonomic level","text":"generate family-level global distribution map species richness, use powoSpecies function without genus constraint query full species list desired family associated distribution data. , resulting query object used input data powoMap function. example uses previously generated dataframe-formatted mapspdist object input data powoMap function, distcol argument set “native_to_country”, taxclas argument set \"family\", vir_color argument set “viridis”, bre_color argument set “Spectral”, automatically produce two global distribution maps Lecythidaceae’s species richness country level, distinctly colored Viridis RColorBrewer color palettes. Note set taxclas \"genus\", powoMap function produced individual distribution maps species richness every single genus within Lecythidaceae, stored desired directory dir argument. FIGURE 3. Global species richness Lecythidaceae country level colored viridis scale. FIGURE 4. Global species richness Lecythidaceae country level colored Spectral scale. create global maps Lecythidaceae according botanical subdivision, change argument distcol “native_to_botanical_countries”, vir_color argument “viridis”, bre_color argument “Spectral”. automatically produce two global distribution maps Lecythidaceae’s species richness botanical country-level, distinctly colored Viridis RColorBrewer color palettes. Note set taxclas \"genus\", powoMap function produced individual distribution maps species richness every single genus within Lecythidaceae, stored desired directory dir argument. FIGURE 5. Global species richness Lecythidaceae botanical country level colored viridis scale. FIGURE 6. Global species richness Lecythidaceae botanical country level colored Spectral scale.","code":"mapspdist <- powoSpecies(family = \"Lecythidaceae\",                          genus = NULL,                          hybridspp = FALSE,                          country = NULL,                          verbose = FALSE,                          save = FALSE,                          dir = \"results_powoSpecies\",                          filename = \"Lecythidaceae\") powoMap(inputdf = mapspdist,         botctrs = FALSE,         distcol = \"native_to_country\",         taxclas = \"family\",         verbose = FALSE,         save = FALSE,         vir_color = \"viridis\",         bre_color = \"Spectral\",         leg_title = \"SR\",         dpi = 600,         dir = \"results_powoMap/\",         filename = \"global_richness_botcountry_map\",         format = \"jpg\") powoMap(inputdf = mapspdist,         botctrs = TRUE,         distcol = \"native_to_botanical_countries\",         taxclas = \"family\",         verbose = FALSE,         save = FALSE,         vir_color = \"viridis\",         bre_color = \"Spectral\",         leg_title = \"SR\",         dpi = 600,         dir = \"results_powoMap\",         filename = \"global_richness_botcountry_map\",         format = \"jpg\")"},{"path":"https://dboslab.github.io/expowo/articles/mapping_distribution.html","id":"using-an-external-spreadsheet-as-input-data-in-powomap","dir":"Articles","previous_headings":"","what":"5. Using an external spreadsheet as input data in powoMap","title":"Mapping global distribution for any taxonomic level","text":"possible use data databases order create global maps using powoMap function. perform task, spreadsheet must least column species names one two columns associated distribution countries /botanical regions. species names must binomial, country names must written full separated comma space right powoMap function works properly. data frame generated function powoSpecies can used model create standard spreadsheet (see examples ). use external dataset imported spreadsheet, must provide name object argument inputdf. powoMap function also need information taxon level generate maps. , user must provide name correspondent column argument taxclas (e.g., \"family\", \"genus\"). indicate column distribution, change distcol argument. distribution according political country names (e.g., Brazil, Peru), just write name column data. Otherwise, need global maps according TDWG botanical subdivision level 3, must indicate column data (e.g., Brazil North, Peru) stored also change argument botctrs FALSE TRUE.","code":""},{"path":"https://dboslab.github.io/expowo/articles/mapping_distribution.html","id":"reference","dir":"Articles","previous_headings":"","what":"6. Reference","title":"Mapping global distribution for any taxonomic level","text":"POWO (2019). “Plants World Online. Facilitated Royal Botanic Gardens, Kew. Published Internet; http://www.plantsoftheworldonline.org/ Retrieved April 2023.”","code":""},{"path":"https://dboslab.github.io/expowo/articles/mining_accepted_genera.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Mining genus list for any plant family","text":"Install latest development version expowo GitHub:","code":"#install.packages(\"devtools\") devtools::install_github(\"DBOSlab/expowo\") library(expowo)"},{"path":"https://dboslab.github.io/expowo/articles/mining_accepted_genera.html","id":"mining-all-accepted-genera-for-any-plant-family","dir":"Articles","previous_headings":"","what":"Mining all accepted genera for any plant family","title":"Mining genus list for any plant family","text":"function powoGenera returns data frame saves CSV file listing genera associated number accepted species global geographic distribution country botanical level. global classification botanical divisions follows World Geographical Scheme Recording Plant Distributions, already associated taxon’s distribution POWO. TABLE 1. general powoGenera search mining accepted genera specific angiosperm families.","code":"ABM <- powoGenera(family = c(\"Aristolochiaceae\", \"Begoniaceae\", \"Martyniaceae\"),                   hybrid = FALSE,                   verbose = FALSE,                   save = FALSE,                   dir = \"results_powoGenera\",                   filename = \"Arist_Begon_Martyniaceae_search\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_accepted_genera.html","id":"mining-all-accepted-genera-for-all-angiosperm-families","dir":"Articles","previous_headings":"","what":"Mining all accepted genera for all angiosperm families","title":"Mining genus list for any plant family","text":"mine global genus checklist associated species number distribution families flowering plants, recommend load dataframe-formatted data object called POWOcodes comes associated expowo package. POWOcodes data object already contains URI addresses angiosperms families recognized POWO database, just need run code . example shows mine global checklist accepted genera flowering plants using vector angiosperm families associated URI addresses stored POWOcodes object.  Since long search might requires days completed, may happen loose internet connection point queried search. need start entirely new search beginning. setting powoGenera rerun = TRUE, previously stopped search continue left , starting last retrieved taxon. Please ensure ‘filename’ argument exactly matches name CSV file saved previous search, previously saved CSV file located within subfolder named current date. , please rename date subfolder accordingly.","code":"data(POWOcodes)  ALL_gen <- powoGenera(POWOcodes$family,                       hybrid = TRUE,                       verbose = TRUE,                       save = FALSE,                       dir = \"results_powoGenera\",                       filename = \"all_angiosperm_genera\") data(POWOcodes)  ALL_gen <- powoGenera(POWOcodes$family,                       hybrid = TRUE,                       verbose = TRUE,                       rerun = TRUE,                       save = FALSE,                       dir = \"results_powoGenera\",                       filename = \"all_angiosperm_genera\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_accepted_genera.html","id":"narrowing-down-the-powogenera-search-based-on-a-specified-country-vector","dir":"Articles","previous_headings":"","what":"Narrowing down the powoGenera search based on a specified country vector","title":"Mining genus list for any plant family","text":"can also narrow search accepted genera family focus just particular country list countries. just need define vector country names argument country. example , see originally searched genera within families Aristolochiaceae, Lecythidaceae, Fagaceae, Dipterocarpaceae, function returned list genera Aristolochiaceae Lecythidaceae, remaining families genera recorded list countries interest, .e. Argentina, Brazil French Guiana. TABLE 2. powoGenera search based specified country vector.","code":"ADFL <- powoGenera(family = c(\"Aristolochiaceae\", \"Dipterocarpaceae\",                                \"Fagaceae\", \"Lecythidaceae\"),                    hybrid = FALSE,                    country = c(\"Argentina\", \"Brazil\", \"French Guiana\"),                    verbose = FALSE,                    save = FALSE,                    dir = \"results_powoGenera\",                    filename = \"country_constrained_search\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_accepted_genera.html","id":"narrowing-down-the-powogenera-search-based-on-a-specified-genus-vector","dir":"Articles","previous_headings":"","what":"Narrowing down the powoGenera search based on a specified genus vector","title":"Mining genus list for any plant family","text":"may want retrieve information just one list accepted genera given country (list countries). Just like , need define vector genus names argument genus vector country names argument country. example , see searched just genera Asarum Bertholletia families Aristolochiaceae Lecythidaceae, function returned Lecythidaceae genus Bertholletia, Asarum occur provided list countries, .e. Brazil French Guiana. TABLE 3. powoGenera search based specified genus country vectors.","code":"AL <- powoGenera(family = c(\"Aristolochiaceae\", \"Lecythidaceae\"),                   genus = c(\"Asarum\", \"Bertholletia\"),                  hybrid = FALSE,                  country = c(\"Brazil\", \"French Guiana\"),                  verbose = TRUE,                  save = FALSE,                  dir = \"results_powoGenera\",                  filename = \"genus_country_constrained_search\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_accepted_genera.html","id":"reference","dir":"Articles","previous_headings":"","what":"Reference","title":"Mining genus list for any plant family","text":"POWO (2019). “Plants World Online. Facilitated Royal Botanic Gardens, Kew. Published Internet; http://www.plantsoftheworldonline.org/ Retrieved April 2023.”","code":""},{"path":"https://dboslab.github.io/expowo/articles/mining_accepted_species.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Mining species list for any plant family","text":"Install latest development version expowo GitHub:","code":"#install.packages(\"devtools\") devtools::install_github(\"DBOSlab/expowo\") library(expowo)"},{"path":"https://dboslab.github.io/expowo/articles/mining_accepted_species.html","id":"mining-all-accepted-species-for-any-angiosperm-family","dir":"Articles","previous_headings":"Setup","what":"Mining all accepted species for any angiosperm family","title":"Mining species list for any plant family","text":"function powoSpecies returns data frame saves CSV file listing accepted species (including hybrid species ), publication, authorship, global geographic distribution country botanical level family flowering plants. global classification botanical divisions follows World Geographical Scheme Recording Plant Distributions, already associated taxon’s distribution POWO. example shows mine accepted species specified vector families. output shown (TABLE 1) simplified version, removed columns (genus, epithet authors) focus display taxonomic distribution data.  TABLE 1. general powoSpecies search mining accepted species specific angiosperm families.","code":"res <- powoSpecies(family = c(\"Cabombaceae\", \"Martyniaceae\"),                    hybrid = FALSE,                    verbose = TRUE,                    save = FALSE,                    dir = \"results_powoSpecies\",                    filename = \"Cabom_Martyniaceae_search\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_accepted_species.html","id":"narrowing-down-the-powospecies-search-based-on-a-specified-country-vector","dir":"Articles","previous_headings":"Setup","what":"Narrowing down the powoSpecies search based on a specified country vector","title":"Mining species list for any plant family","text":"can also narrow species checklist search family focusing just particular country list countries. just need define vector country names argument . example , note originally searched species within families Aristolochiaceae, Cabombaceae, Martyniaceae, function returned smaller species list, many species searched families recorded specified vector country, .e. Brazil Colombia.  TABLE 2. powoSpecies search based specified country vector.","code":"ACM <- powoSpecies(family = c(\"Aristolochiaceae\", \"Cabombaceae\", \"Martyniaceae\"),                    hybrid = FALSE,                    country = c(\"Brazil\", \"Colombia\"),                    verbose = FALSE,                    save = FALSE,                    dir = \"results_powoSpecies\",                    filename = \"country_constrained_search\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_accepted_species.html","id":"narrowing-down-the-powospecies-search-based-on-a-specified-genus-and-country-vector","dir":"Articles","previous_headings":"Setup","what":"Narrowing down the powoSpecies search based on a specified genus and country vector","title":"Mining species list for any plant family","text":"may want retrieve information just one list accepted genera given country (list countries). Just like , need define vector genus names argument vector country names argument . example , see searched just genera Proboscidea Cabomba families Martyniaceae Cabombaceae, function returned Cabombaceae genus Cabomba, Proboscidea occur provided list countries, .e. Argentina, French Guiana, Brazil.  TABLE 3. powoSpecies search based specified genus country vectors.","code":"MC <- powoSpecies(family = c(\"Martyniaceae\", \"Cabombaceae\"),                   genus = c(\"Proboscidea\", \"Cabomba\"),                   hybrid = FALSE,                   country = c(\"Argentina\", \"French Guiana\", \"Brazil\"),                   verbose = TRUE,                   save = FALSE,                   dir = \"results_powoSpecies\",                   filename = \"country_and_genus_constrained_search\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_accepted_species.html","id":"mining-all-accepted-species-for-all-angiosperm-families","dir":"Articles","previous_headings":"Setup","what":"Mining all accepted species for all angiosperm families","title":"Mining species list for any plant family","text":"mine species checklist families flowering plants, recommend load dataframe-formatted data object called POWOcodes comes associated expowo package. POWOcodes data object already contains URI addresses angiosperms families recognized POWO database, just need call R environment. example shows mine global checklist accepted species flowering plants using vector angiosperm families associated URI addresses stored POWOcodes object.  Since long search might requires days completed, may happen loose internet connection point queried search. need start entirely new search beginning. setting powoSpecies rerun = TRUE, previously stopped search continue left , starting last retrieved taxon. Please ensure ‘filename’ argument exactly matches name CSV file saved previous search, previously saved CSV file located within subfolder named current date. , please rename date subfolder accordingly.","code":"utils::data(\"POWOcodes\")  ALL_spp <- powoSpecies(POWOcodes$family,                        hybrid = TRUE,                        verbose = TRUE,                        save = FALSE,                        dir = \"results_powoSpecies\",                        filename = \"all_angiosperm_species\") utils::data(\"POWOcodes\")  ALL_spp <- powoSpecies(POWOcodes$family,                        hybrid = TRUE,                        verbose = TRUE,                        rerun = TRUE,                        save = FALSE,                        dir = \"results_powoSpecies\",                        filename = \"all_angiosperm_species\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_accepted_species.html","id":"reference","dir":"Articles","previous_headings":"Setup","what":"Reference","title":"Mining species list for any plant family","text":"POWO (2019). “Plants World Online. Facilitated Royal Botanic Gardens, Kew. Published Internet; http://www.plantsoftheworldonline.org/ Retrieved April 2023.”","code":""},{"path":"https://dboslab.github.io/expowo/articles/mining_family_species_number.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Mining species number of any plant family","text":"Install latest development version expowo GitHub:","code":"#install.packages(\"devtools\") devtools::install_github(\"DBOSlab/expowo\") library(expowo)"},{"path":"https://dboslab.github.io/expowo/articles/mining_family_species_number.html","id":"mining-the-total-species-number-for-any-angiosperm-family","dir":"Articles","previous_headings":"Setup","what":"Mining the total species number for any angiosperm family","title":"Mining species number of any plant family","text":"function powoFam returns data frame saves CSV file listing total species number (excluding hybrid species) queried plant families. example shows mine total species number defining vector three families: Cabombaceae, Lecythidaceae, Martyniaceae. resulting output (TABLE 1) also saved directly specified directory results_powoFam.  TABLE 1. general powoFam search mining total species number three angiosperm families.","code":"CLM <- powoFam(family = c(\"Cabombaceae\", \"Lecythidaceae\", \"Martyniaceae\"),                verbose = TRUE,                save = FALSE,                dir = \"results_powoFam\",                filename = \"Camb_Lecy_Martyniaceae_diversity\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_family_species_number.html","id":"mining-species-number-accross-all-angiosperm-families","dir":"Articles","previous_headings":"Setup","what":"Mining species number accross all angiosperm families","title":"Mining species number of any plant family","text":"mine species number families flowering plants, recommend load dataframe-formatted object called POWOcodes comes associated expowo package. POWOcodes data object already contains URI addresses angiosperms families recognized POWO database, just need call R environment. example shows mine species number plant families using vector angiosperm families associated URI addresses stored POWOcodes object.","code":"utils::data(POWOcodes)  ALL_fam <- powoFam(POWOcodes$family,                    verbose = TRUE,                    save = FALSE,                    dir = \"results_powoFam\",                    filename = \"all_angiosperms_species_number\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_family_species_number.html","id":"reference","dir":"Articles","previous_headings":"Setup","what":"Reference","title":"Mining species number of any plant family","text":"POWO (2019). “Plants World Online. Facilitated Royal Botanic Gardens, Kew. Published Internet; http://www.plantsoftheworldonline.org/ Retrieved April 2023.”","code":""},{"path":"https://dboslab.github.io/expowo/articles/mining_megadiverse_genera.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Mining mega-diverse genera of flowering plants","text":"Install latest development version expowo GitHub:","code":"#install.packages(\"devtools\") devtools::install_github(\"DBOSlab/expowo\") library(expowo)"},{"path":"https://dboslab.github.io/expowo/articles/mining_megadiverse_genera.html","id":"mining-mega-diverse-genera-for-any-plant-family","dir":"Articles","previous_headings":"Setup","what":"Mining mega-diverse genera for any plant family","title":"Mining mega-diverse genera of flowering plants","text":"function megaGen uses specified threshold number return data frame save CSV file listing mega-diverse genera family flowering plants associated number accepted species. example, performed search three plant families using threshold 500 species, output contains results Aristolochia Begonia Aristolochiaceae Begoniaceae families.  TABLE 1. general megaGen search mining mega-diverse genera specific angiosperm families, based specified threshold 500 species.","code":"ABM <- megaGen(family = c(\"Aristolochiaceae\", \"Begoniaceae\", \"Martyniaceae\"),                thld = 500,                verbose = TRUE,                save = FALSE,                dir = \"results_megaGen\",                filename = \"Arist_Begon_Martyniaceae_search\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_megadiverse_genera.html","id":"mining-mega-diverse-genera-accross-all-angiosperm-families","dir":"Articles","previous_headings":"Setup","what":"Mining mega-diverse genera accross all angiosperm families","title":"Mining mega-diverse genera of flowering plants","text":"mine global checklist mega-diverse genera families flowering plants, including associated species number, recommend load dataframe-formatted data object called POWOcodes comes associated expowo package. POWOcodes data object already contains URI addresses angiosperms families recognized POWO database, just need call R environment. example shows mine global checklist speciose genera flowering plants using vector angiosperm families associated URI addresses stored POWOcodes object.","code":"data(POWOcodes)  ALL_megaGen <- megaGen(POWOcodes$family,                        thld = 500,                        verbose = TRUE,                        save = FALSE,                        dir = \"results_megaGen\",                        filename = \"all_megadiverse_angiosperm_genera\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_megadiverse_genera.html","id":"reference","dir":"Articles","previous_headings":"Setup","what":"Reference","title":"Mining mega-diverse genera of flowering plants","text":"POWO (2019). “Plants World Online. Facilitated Royal Botanic Gardens, Kew. Published Internet; http://www.plantsoftheworldonline.org/ Retrieved April 2023.”","code":""},{"path":"https://dboslab.github.io/expowo/articles/mining_species.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Mining species list for any plant family","text":"Install latest development version expowo GitHub:","code":"#install.packages(\"devtools\") devtools::install_github(\"DBOSlab/expowo\") library(expowo)"},{"path":"https://dboslab.github.io/expowo/articles/mining_species.html","id":"mining-all-accepted-species-for-any-angiosperm-family","dir":"Articles","previous_headings":"Setup","what":"Mining all accepted species for any angiosperm family","title":"Mining species list for any plant family","text":"function powoSpecies returns data frame saves CSV file listing accepted species (including hybrid species ), publication, authorship, global geographic distribution country botanical level family flowering plants. global classification botanical divisions follows World Geographical Scheme Recording Plant Distributions, already associated taxon’s distribution POWO. example shows mine accepted species specified vector families. output shown (TABLE 1) simplified version, removed columns (genus, epithet authors) focus display taxonomic distribution data.  TABLE 1. general powoSpecies search mining accepted species specific angiosperm families.","code":"res <- powoSpecies(family = c(\"Cabombaceae\", \"Martyniaceae\"),                    hybrid = FALSE,                    verbose = TRUE,                    save = FALSE,                    dir = \"results_powoSpecies\",                    filename = \"Cabom_Martyniaceae_search\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_species.html","id":"narrowing-down-the-powospecies-search-based-on-a-specified-country-vector","dir":"Articles","previous_headings":"Setup","what":"Narrowing down the powoSpecies search based on a specified country vector","title":"Mining species list for any plant family","text":"can also narrow species checklist search family focusing just particular country list countries. just need define vector country names argument . example , note originally searched species within families Aristolochiaceae, Cabombaceae, Martyniaceae, function returned smaller species list, many species searched families recorded specified vector country, .e. Brazil Colombia.  TABLE 2. powoSpecies search based specified country vector.","code":"ACM <- powoSpecies(family = c(\"Aristolochiaceae\", \"Cabombaceae\", \"Martyniaceae\"),                    hybrid = FALSE,                    country = c(\"Brazil\", \"Colombia\"),                    verbose = FALSE,                    save = FALSE,                    dir = \"results_powoSpecies\",                    filename = \"country_constrained_search\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_species.html","id":"narrowing-down-the-powospecies-search-based-on-a-specified-genus-and-country-vector","dir":"Articles","previous_headings":"Setup","what":"Narrowing down the powoSpecies search based on a specified genus and country vector","title":"Mining species list for any plant family","text":"may want retrieve information just one list accepted genera given country (list countries). Just like , need define vector genus names argument vector country names argument . example , see searched just genera Proboscidea Cabomba families Martyniaceae Cabombaceae, function returned Cabombaceae genus Cabomba, Proboscidea occur provided list countries, .e. Argentina, French Guiana, Brazil.  TABLE 3. powoSpecies search based specified genus country vectors.","code":"MC <- powoSpecies(family = c(\"Martyniaceae\", \"Cabombaceae\"),                   genus = c(\"Proboscidea\", \"Cabomba\"),                   hybrid = FALSE,                   country = c(\"Argentina\", \"French Guiana\", \"Brazil\"),                   verbose = TRUE,                   save = FALSE,                   dir = \"results_powoSpecies\",                   filename = \"country_and_genus_constrained_search\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_species.html","id":"mining-all-accepted-species-for-all-angiosperm-families","dir":"Articles","previous_headings":"Setup","what":"Mining all accepted species for all angiosperm families","title":"Mining species list for any plant family","text":"mine species checklist families flowering plants, recommend load dataframe-formatted data object called POWOcodes comes associated expowo package. POWOcodes data object already contains URI addresses angiosperms families recognized POWO database, just need call R environment. example shows mine global checklist accepted species flowering plants using vector angiosperm families associated URI addresses stored POWOcodes object.  Since long search might requires days completed, may happen loose internet connection point queried search. need start entirely new search beginning. setting powoSpecies rerun = TRUE, previously stopped search continue left , starting last retrieved taxon. Please ensure ‘filename’ argument exactly matches name CSV file saved previous search, previously saved CSV file located within subfolder named current date. , please rename date subfolder accordingly.","code":"utils::data(\"POWOcodes\")  ALL_spp <- powoSpecies(POWOcodes$family,                        hybrid = TRUE,                        verbose = TRUE,                        save = FALSE,                        dir = \"results_powoSpecies\",                        filename = \"all_angiosperm_species\") utils::data(\"POWOcodes\")  ALL_spp <- powoSpecies(POWOcodes$family,                        hybrid = TRUE,                        verbose = TRUE,                        rerun = TRUE,                        save = FALSE,                        dir = \"results_powoSpecies\",                        filename = \"all_angiosperm_species\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_species.html","id":"reference","dir":"Articles","previous_headings":"Setup","what":"Reference","title":"Mining species list for any plant family","text":"POWO (2019). “Plants World Online. Facilitated Royal Botanic Gardens, Kew. Published Internet; http://www.plantsoftheworldonline.org/ Retrieved April 2023.”","code":""},{"path":"https://dboslab.github.io/expowo/articles/mining_species_distribution.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Mining distribution for any plant species","text":"Install latest development version expowo GitHub:","code":"#install.packages(\"devtools\") devtools::install_github(\"DBOSlab/expowo\") library(expowo)"},{"path":"https://dboslab.github.io/expowo/articles/mining_species_distribution.html","id":"mining-the-distribution-for-any-plant-species","dir":"Articles","previous_headings":"","what":"Mining the distribution for any plant species","title":"Mining distribution for any plant species","text":"function powoSpDist returns dataframe saves CSV file listing entire global distribution country botanical level given species scientific name(s) (excluding hybrid species), genus, publication authorship. global classification botanical divisions follows World Geographical Scheme Recording Plant Distributions, already associated taxon’s distribution POWO. example shows mine distribution specified vector two species. output shown (table) simplified removing family distribution according botanical subdivision columns.  TABLE 1. general powoSpDist search mining distribution two angiosperm species.","code":"BL_dist <- powoSpDist(family = c(\"Begoniaceae\", \"Lecythidaceae\"),                       species = c(\"Hillebrandia sandwicensis\", \"Lecythis pisonis\"),                       verbose = TRUE,                       save = FALSE,                       dir = \"results_powoSpDist\",                       filename = \"Begoniaceae_Lecythidaceae\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_species_distribution.html","id":"mining-distribution-for-all-angiosperm-species","dir":"Articles","previous_headings":"","what":"Mining distribution for all angiosperm species","title":"Mining distribution for any plant species","text":"mine distribution checklist accepted species flowering plants, can load dataframe-formatted data object called POWOcodes comes associated expowo package. POWOcodes data object already contains URI addresses angiosperms families recognized POWO database, just need call R environment. example shows mine global distribution accepted non hybrid species flowering plants using vector angiosperm families associated URI addresses stored POWOcodes object. Note argument species NULL, search constrained particular species, .e. function return global distribution species queried families.","code":"data(POWOcodes)  ALL_dist <- powoSpDist(POWOcodes$family,                        species = NULL,                        verbose = TRUE,                        save = FALSE,                        dir = \"results_powoSpDist\",                        filename = \"all_angiosperm_distribution\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_species_distribution.html","id":"reference","dir":"Articles","previous_headings":"","what":"Reference","title":"Mining distribution for any plant species","text":"POWO (2019). “Plants World Online. Facilitated Royal Botanic Gardens, Kew. Published Internet; http://www.plantsoftheworldonline.org/ Retrieved April 2023.”","code":""},{"path":"https://dboslab.github.io/expowo/articles/mining_toprichest_genera.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Mining the top richest genera of flowering plants","text":"Install latest development version expowo GitHub:","code":"#install.packages(\"devtools\") devtools::install_github(\"DBOSlab/expowo\") library(expowo)"},{"path":"https://dboslab.github.io/expowo/articles/mining_toprichest_genera.html","id":"mining-the-top-richest-genera-for-any-plant-family","dir":"Articles","previous_headings":"","what":"Mining the top richest genera for any plant family","title":"Mining the top richest genera of flowering plants","text":"function topGen relatively similar megaGen, instead using specific threshold species number considered big genera, saves CSV file listing top species-rich genera target angiosperm family, associated number accepted species based integer number set argument limit. example , used default search top ten richest genera (.e., argument limit set NULL, function searches 10 diverse genera within plant family). columns omitted display results, rows show top ten three chosen families: Bignoniaceae, Solanaceae Lecythidaceae. Note table 30 rows, expected multiply family (n = 3) ten. error, since plant families many genera, case Begoniaceae 2 genera.  TABLE 1. general topGen search mining top species rich genera specific angiosperm families.","code":"ABL_top <- topGen(family = c(\"Aristolochiaceae\", \"Begoniaceae\", \"Lecythidaceae\"),                   limit = NULL,                   verbose = TRUE,                   save = FALSE,                   dir = \"results_topGen\",                   filename = \"Aristo_Bego_Lecythidaceae_search\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_toprichest_genera.html","id":"mining-the-top-richest-genera-accross-all-angiosperm-families","dir":"Articles","previous_headings":"","what":"Mining the top richest genera accross all angiosperm families","title":"Mining the top richest genera of flowering plants","text":"mine global checklist top species-richest genera families flowering plants, including associated species number, recommend load dataframe-formatted data object called POWOcodes comes associated expowo package. POWOcodes data object already contains URI addresses angiosperms families recognized POWO database, just need call R environment. example shows mine top species-rich genera flowering plants using vector angiosperm families, associated URI addresses stored POWOcodes object limit 10 genera family.","code":"data(POWOcodes)  ALL_top <- topGen(POWOcodes$family,                   limit = 10,                   verbose = TRUE,                   save = FALSE,                   dir = \"results_topGen\",                   filename = \"all_toprichest_angiosperm_genera\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_toprichest_genera.html","id":"reference","dir":"Articles","previous_headings":"","what":"Reference","title":"Mining the top richest genera of flowering plants","text":"POWO (2019). “Plants World Online. Facilitated Royal Botanic Gardens, Kew. Published Internet; http://www.plantsoftheworldonline.org/ Retrieved April 2023.”","code":""},{"path":"https://dboslab.github.io/expowo/articles/plotting_discoveries.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Plotting species discovery","text":"Install latest developmental version expowo GitHub:","code":"#install.packages(\"devtools\") devtools::install_github(\"DBOSlab/expowo\") library(expowo)"},{"path":"https://dboslab.github.io/expowo/articles/plotting_discoveries.html","id":"plotting-the-species-discoveries-for-one-genus","dir":"Articles","previous_headings":"","what":"1. Plotting the species discoveries for one genus","title":"Plotting species discovery","text":"example shows accumulation curve Luetzelburgia, one legume genus. black line derived publication dates currently accepted species names, red line related publication year basionym accepted species name. result, illustrates cumulative count formally described species genus. Different file formats (e.g. JPG, PDF, PNG, TIFF) also supported setting argument format. Notice spp_changes_col argument set name column (case, “genus”) input dataframe want used plotting graphic. defined “family”, example, function use data entire family available input dataframe create graphic.  FIGURE 1. Accumulation formally described species big genus Luetzelburgia time.  accumulation curve Luetzelburgia shows 14 spp. described high increase taxonomic changes 2008 (noticeable curve light red).","code":"accGraph(inputdf = \"Luetzelburgia_spp\",          verbose = TRUE,          spp_acc = FALSE,          spp_changes = TRUE,          spp_changes_col = \"genus\",          genus_plots = FALSE,                   save = TRUE,          dir = \"results_accGraph\",          filename = \"cumulative_discovery_Luetzelburgia\",          format = \"jpg\")"},{"path":"https://dboslab.github.io/expowo/articles/plotting_discoveries.html","id":"plotting-the-species-discoveries-for-the-entire-dataset","dir":"Articles","previous_headings":"","what":"2. Plotting the species discoveries for the entire dataset","title":"Plotting species discovery","text":"dataset contains species one genus, accGraph function can automatically plot graphic changes species nomenclature years data genera. example , adjusted argument spp_acc FALSE, notice set TRUE example . argument spp_acc define creation second type graphic. dynamics nomenclatural changes visually represented varying densities curves circles years publications. Currently accepted names gray size scaled proportionately associated homotypic heterotypic synonyms (yellow) published time. First, get graphs, extracted data genera Achillea, Matricaria Launaea Plants World Online using powoSpecies follows: , used newly developed function accGraph plot individual graphics accumulation species discovery violin graph three genera. FIGURE 2. Accumulation formally described species genus Achillea time. FIGURE 3. Accumulation formally described species genus Matricaria time. FIGURE 4. Accumulation formally described species genus Launaea time. FIGURE 5. temporal dynamics nomenclatural changes three genera.","code":"newdata <- powoSpecies(family = \"Asteraceae\",                        genus = c(\"Achillea\", \"Matricaria\", \"Launaea\"),                        synonyms = TRUE,                        save = FALSE,                        dir = \"Asteraceae_results\",                        filename = \"Asteraceae_spp\") accGraph(inputdf = newdata,          verbose = TRUE,          spp_acc = TRUE,          spp_changes = TRUE,          spp_changes_col = \"genus\",          genus_plots = TRUE,          save = TRUE,          dir = \"results_accGraph\",          filename = \"cumulative_discovery_Asteraceae_\",          format = \"jpg\")"},{"path":"https://dboslab.github.io/expowo/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Debora Zuanny. Author, maintainer, copyright holder. Domingos Cardoso. Author, contributor, copyright holder.","code":""},{"path":"https://dboslab.github.io/expowo/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zuanny D, Cardoso D (2024). expowo: Data Mining Plant Diversity Distribution. https://dboslab.github.io/expowo/, https://github.com/dboslab/expowo.","code":"@Manual{,   title = {expowo: Data Mining of Plant Diversity and Distribution},   author = {Debora Zuanny and Domingos Cardoso},   year = {2024},   note = {https://dboslab.github.io/expowo/, https://github.com/dboslab/expowo}, }"},{"path":"https://dboslab.github.io/expowo/index.html","id":"expowo-","dir":"","previous_headings":"","what":"Data Mining of Plant Diversity and Distribution","title":"Data Mining of Plant Diversity and Distribution","text":"R package mining species list, diversity estimates, distribution data genus family flowering plants World Checklist Vascular Plants (WCVP) available RBG Kew’s Plants World Online (POWO).","code":""},{"path":"https://dboslab.github.io/expowo/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Data Mining of Plant Diversity and Distribution","text":"main goal expowo package retrieve information diversity distribution plant family publicly available taxonomically verified database Plants World Online (POWO). package intended efficiently mine content inside source HTML pages specific genus family. can return comma-separated values (CSV) file number accepted species country-level distribution genus well full list accepted species genus family, authorship, original publication global distribution. latests functions implemented, powoMap accGraph, available GitHub version can automatically create global maps taxon level accumulation graphics species discovery, respectively.","code":""},{"path":[]},{"path":"https://dboslab.github.io/expowo/index.html","id":"update-r-and-rstudio-versions","dir":"","previous_headings":"Before using expowo","what":"Update R and RStudio versions","title":"Data Mining of Plant Diversity and Distribution","text":"Please make sure installed latest versions R (Mac OS, Windows) RStudio (Mac OS / Windows: choose free version).","code":""},{"path":"https://dboslab.github.io/expowo/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Data Mining of Plant Diversity and Distribution","text":"can install expowo CRAN just running following R code: Otherwise, can install latest development version expowo GitHub using devtools package following R code: OBS.: download development version, need Git software installed. operating system Microsoft Windows, also need download Rtools.","code":"install.packages(\"expowo\") library(expowo) install.packages(\"devtools\") devtools::install_github(\"DBOSlab/expowo\") library(expowo)"},{"path":"https://dboslab.github.io/expowo/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Data Mining of Plant Diversity and Distribution","text":"package’s major functions (powoFam, powoGenera, powoSpecies, powoSpDist, megaGen, topGen) require name target family (vector multiple family names). major functions work minor functions (getInfo saveCSV), auxiliary defensive functions mine plant data. Respectively, getInfo mines taxonomic information genus, total number species within genus, complete search native introduced country-level distribution genus species, saveCSV fastly writes CSV files within current date subfolder provided specific directory. extracted distributions, also possible automatically generate global maps according political country botanical subdivision function powoMap. Additionally, want plot new species discoveries within genus downloading data using powoSpecies, also possible automatically using accGraph. See examples use expowo’s functions mining using data regarding global plant diversity distribution ‘Articles’ section site.","code":""},{"path":"https://dboslab.github.io/expowo/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Data Mining of Plant Diversity and Distribution","text":"detailed description expowo’s full functionality available . expowo package continuously constructed. want make suggestions, let us know! hope helpful botanical research!","code":""},{"path":"https://dboslab.github.io/expowo/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Data Mining of Plant Diversity and Distribution","text":"Zuanny, D. & Cardoso, D. (2022). expowo: R package mining plant diversity distribution data. https://github.com/DBOSlab/expowo","code":""},{"path":"https://dboslab.github.io/expowo/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 expowo authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://dboslab.github.io/expowo/reference/accGraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Create graphics of species discoveries accumulation and nomenclatural changes — accGraph","title":"Create graphics of species discoveries accumulation and nomenclatural changes — accGraph","text":"Produces graphics dynamics species description historical nomenclature changes within family genus provided. designed create graphics based dataframe resulted powoSpecies. graph type can selected two arguments (spp_acc spp_changes) multiple graphs different taxonomic groups within input data can produced automatically single run.","code":""},{"path":"https://dboslab.github.io/expowo/reference/accGraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create graphics of species discoveries accumulation and nomenclatural changes — accGraph","text":"","code":"accGraph(inputdf = NULL,          verbose = TRUE,          spp_acc = TRUE,          spp_changes = TRUE,          spp_changes_col = NULL,          genus_plots = TRUE,          save = FALSE,          dir = \"results_accGraph\",          filename = \"cumulative_discovery_\",          format = \"pdf\")"},{"path":"https://dboslab.github.io/expowo/reference/accGraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create graphics of species discoveries accumulation and nomenclatural changes — accGraph","text":"inputdf dataframe generated using powoSpecies function using argument synonyms set TRUE containing genus species column associated information protologue species. species name must binomial, .e. must contain genus name specific epithet. verbose Logical, FALSE, message showing step POWO search printed console full. spp_acc Logical. Setting FALSE means want create individual accumulation graphs genus present dataset. default TRUE. spp_changes Logical. Setting FALSE means want create violin plot data provided. default TRUE. spp_changes_col Define name column main input data species changes considered. example, densities jitters presented genus graphic, set spp_changes_col = \"genus\". plotting dynamics nomenclatural changes across entire dataset single density graphic, must add new column input data containing character inside rows. case, ensure also keep genus_plots = TRUE. genus_plots Logical. FALSE, single density jitter plot graphic produced entire input data. default TRUE, result graphic multiple densities jitters created inside graphic, depending chosen column. save Logical, TRUE, search results saved disk. dir Pathway computer's directory, file saved provided argument save set TRUE. default create directory named results_accGraph search results saved within subfolder named current date. filename Name output file saved. default create file entitled cumulative_discovery_. format character vector related file format graph saved. default \"pdf\" save output Portable Document Format (.pdf), can also choose \"jpg\" save Joint Photographic Experts Group (.jpg), \"tiff\" save Tag Image File Format (.tiff) \"png\" save Portable Network Graphics (.png).","code":""},{"path":"https://dboslab.github.io/expowo/reference/accGraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create graphics of species discoveries accumulation and nomenclatural changes — accGraph","text":"Objects class c(\"gg\", \"ggplot\") saves output disk.","code":""},{"path":[]},{"path":"https://dboslab.github.io/expowo/reference/accGraph.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create graphics of species discoveries accumulation and nomenclatural changes — accGraph","text":"Debora Zuanny & Domingos Cardoso","code":""},{"path":"https://dboslab.github.io/expowo/reference/accGraph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create graphics of species discoveries accumulation and nomenclatural changes — accGraph","text":"","code":"if (FALSE) {  library(expowo)  accGraph(inputdf = \"output\",          verbose = TRUE,          spp_acc = TRUE,          spp_changes = TRUE,          spp_changes_col = \"genus\",          genus_plots = TRUE,          save = FALSE,          dir = \"results_accGraph\",          filename = \"cumulative_discovery_Cyperaceae\",          format = \"pdf\") }"},{"path":"https://dboslab.github.io/expowo/reference/angioData.html","id":null,"dir":"Reference","previous_headings":"","what":"List of Angiosperm species — angioData","title":"List of Angiosperm species — angioData","text":"Complete list non-hybrid species associated data Lecythidaceae, Aristolochiaceae, Martyniaceae, Cabombaceae, Begoniaceae, retrieved POWO database November 2022 using expowo's function powoSpecies.","code":""},{"path":"https://dboslab.github.io/expowo/reference/angioData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of Angiosperm species — angioData","text":"","code":"data(angioData)"},{"path":"https://dboslab.github.io/expowo/reference/angioData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List of Angiosperm species — angioData","text":"data.frame","code":""},{"path":"https://dboslab.github.io/expowo/reference/angioGenera.html","id":null,"dir":"Reference","previous_headings":"","what":"List of Angiosperm genera — angioGenera","title":"List of Angiosperm genera — angioGenera","text":"Complete list genera associated data Lecythidaceae, Aristolochiaceae, Begoniaceae, Martyniaceae, Dipterocarpaceae, Fagaceae, retrieved POWO database January 2023 using expowo's function powoGenera.","code":""},{"path":"https://dboslab.github.io/expowo/reference/angioGenera.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of Angiosperm genera — angioGenera","text":"","code":"data(angioGenera)"},{"path":"https://dboslab.github.io/expowo/reference/angioGenera.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List of Angiosperm genera — angioGenera","text":"data.frame","code":""},{"path":"https://dboslab.github.io/expowo/reference/botdivmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Global map of botanical country subdivisions — botdivmap","title":"Global map of botanical country subdivisions — botdivmap","text":"Global-scale map botanical countries (level 3) according World Geographical Scheme Recording Plant Distributions (WGSRPD)","code":""},{"path":"https://dboslab.github.io/expowo/reference/botdivmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global map of botanical country subdivisions — botdivmap","text":"","code":"data(botdivmap)"},{"path":"https://dboslab.github.io/expowo/reference/botdivmap.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Global map of botanical country subdivisions — botdivmap","text":"Sf Dataframe","code":""},{"path":"https://dboslab.github.io/expowo/reference/botdivmap.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Global map of botanical country subdivisions — botdivmap","text":"https://www.tdwg.org/standards/wgsrpd/","code":""},{"path":"https://dboslab.github.io/expowo/reference/botregions.html","id":null,"dir":"Reference","previous_headings":"","what":"Countries and associated classification of botanical divisions — botregions","title":"Countries and associated classification of botanical divisions — botregions","text":"Countries associated classification botanical divisions according World Geographical Scheme Recording Plant Distributions.","code":""},{"path":"https://dboslab.github.io/expowo/reference/botregions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Countries and associated classification of botanical divisions — botregions","text":"","code":"data(botregions)"},{"path":"https://dboslab.github.io/expowo/reference/botregions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Countries and associated classification of botanical divisions — botregions","text":"data.frame","code":""},{"path":"https://dboslab.github.io/expowo/reference/botregions.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Countries and associated classification of botanical divisions — botregions","text":"https://www.tdwg.org/standards/wgsrpd/","code":""},{"path":"https://dboslab.github.io/expowo/reference/get_year_pubs.html","id":null,"dir":"Reference","previous_headings":"","what":"Secondary function to transform data generated with powoSpecies — get_year_pubs","title":"Secondary function to transform data generated with powoSpecies — get_year_pubs","text":"Produces spreadsheet extra data publication, adding corrected year publication counting synonyms species. optional function used run expowo's powoSpecies use input data expowo's accGraph.","code":""},{"path":"https://dboslab.github.io/expowo/reference/get_year_pubs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Secondary function to transform data generated with powoSpecies — get_year_pubs","text":"","code":"get_year_pubs(inputdf = NULL,               verbose = TRUE,               save = FALSE,               dir = \"results_POWO_with_year_pubs\",               filename = \"POWO_with_year_pubs\")"},{"path":"https://dboslab.github.io/expowo/reference/get_year_pubs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Secondary function to transform data generated with powoSpecies — get_year_pubs","text":"inputdf dataframe generated using powoSpecies function argument synonyms set TRUE containing genus species column associated information protologue species. species name must binomial, .e. must contain genus name specific epithet. verbose Logical, FALSE, message showing step POWO search printed console full. save Logical, TRUE, transformed input POWO database saved disk. dir Pathway computer's directory, file saved provided argument save set TRUE. default create directory named results_POWO_with_year_pubs search results saved within subfolder named current date. filename Name output file saved. default create file entitled POWO_with_year_pubs.","code":""},{"path":"https://dboslab.github.io/expowo/reference/get_year_pubs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Secondary function to transform data generated with powoSpecies — get_year_pubs","text":"Objects class dataframe saves output disk.","code":""},{"path":[]},{"path":"https://dboslab.github.io/expowo/reference/get_year_pubs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Secondary function to transform data generated with powoSpecies — get_year_pubs","text":"Debora Zuanny & Domingos Cardoso","code":""},{"path":"https://dboslab.github.io/expowo/reference/get_year_pubs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Secondary function to transform data generated with powoSpecies — get_year_pubs","text":"","code":"if (FALSE) {  library(expowo)  output <- powoSpecies(family = \"Fabaceae\",                       genus = NULL,                       synonyms = TRUE,                       country = NULL,                       save = FALSE,                       dir = \"Fabaceae_results_powoSpecies\",                       filename = \"Fabaceae_spp\")   output_year_pubs <- get_year_pubs(inputdf = output,                                   verbose = TRUE,                                   save = FALSE,                                   dir = \"results_POWO_with_year_pubs\",                                   filename = \"POWO_with_year_pubs\") }"},{"path":"https://dboslab.github.io/expowo/reference/megaGen.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract megadiverse genera of any plant family — megaGen","title":"Extract megadiverse genera of any plant family — megaGen","text":"Produces CSV file listing mega-diverse genera plant family Plants World Online (POWO) based provided numeric value threshold considered mega-diverse. Frodin (2004) suggests 500 species threshold.","code":""},{"path":"https://dboslab.github.io/expowo/reference/megaGen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract megadiverse genera of any plant family — megaGen","text":"","code":"megaGen(family,         thld = 500,         verbose = TRUE,         save = FALSE,         dir = \"results_megaGen\",         filename = \"output\")"},{"path":"https://dboslab.github.io/expowo/reference/megaGen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract megadiverse genera of any plant family — megaGen","text":"family Either one family name vector multiple families present POWO. thld defined threshold species number genus considered megadiverse. default value 500 based Frodin (2004). verbose Logical, FALSE, message showing step POWO search printed console full. save Logical, TRUE, search results saved disk. dir Pathway computer's directory, file saved provided argument save set TRUE. default create directory named results_megaGen search results saved within subfolder named current date. filename Name output file saved. default create file entitled output.","code":""},{"path":"https://dboslab.github.io/expowo/reference/megaGen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract megadiverse genera of any plant family — megaGen","text":"table following fields: family, genus, authors, scientific_name, species_number (counting species within genus), kew_id (genus code within Kew's databases), powo_uri (URI access genus POWO).","code":""},{"path":[]},{"path":"https://dboslab.github.io/expowo/reference/megaGen.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract megadiverse genera of any plant family — megaGen","text":"Debora Zuanny & Domingos Cardoso","code":""},{"path":"https://dboslab.github.io/expowo/reference/megaGen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract megadiverse genera of any plant family — megaGen","text":"","code":"if (FALSE) {  library(expowo)  megaGen(family = \"Cyperaceae\",         thld = 500,         save = FALSE,         dir = \"results_megaGen\",         filename = \"Cyperaceae_big_genera\") }"},{"path":"https://dboslab.github.io/expowo/reference/POWOcodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete list of angiosperm families and associated URI addresses — POWOcodes","title":"Complete list of angiosperm families and associated URI addresses — POWOcodes","text":"Complete list APG IV-based families flowering plants associated URI addresses retrieved function get_pow package taxize.","code":""},{"path":"https://dboslab.github.io/expowo/reference/POWOcodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete list of angiosperm families and associated URI addresses — POWOcodes","text":"","code":"data(POWOcodes)"},{"path":"https://dboslab.github.io/expowo/reference/POWOcodes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Complete list of angiosperm families and associated URI addresses — POWOcodes","text":"data.frame","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoFam.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract species number of any plant family — powoFam","title":"Extract species number of any plant family — powoFam","text":"Produces CSV file listing number species genera within target botanical families flowering plants available Plants World Online (POWO).","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoFam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract species number of any plant family — powoFam","text":"","code":"powoFam(family,         verbose = TRUE,         save = FALSE,         dir = \"results_powoFam\",         filename = \"output\")"},{"path":"https://dboslab.github.io/expowo/reference/powoFam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract species number of any plant family — powoFam","text":"family Either one family name vector multiple families present POWO. verbose Logical, FALSE, message showing step POWO search printed console full. save Logical, TRUE, search results saved disk. dir Pathway computer's directory, file saved provided argument save set TRUE. default create directory named results_powoFam searched results saved within subfolder named current date. filename Name output file saved. default create file entitled output.","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoFam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract species number of any plant family — powoFam","text":"table following fields: family, genus_number (counting genera within specified plant family), species_number (countig species within genus), kew_id (family code used Kew's database), powo_uri (URI access family POWO).","code":""},{"path":[]},{"path":"https://dboslab.github.io/expowo/reference/powoFam.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract species number of any plant family — powoFam","text":"Debora Zuanny & Domingos Cardoso","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoFam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract species number of any plant family — powoFam","text":"","code":"if (FALSE) { library(expowo)  powoFam(family = \"Lecythidaceae\",         save = FALSE,         dir = \"results_powoFam\",         filename = \"Lecythidaceae_spp_number\") }"},{"path":"https://dboslab.github.io/expowo/reference/powoGenera.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract list of genera for any plant family — powoGenera","title":"Extract list of genera for any plant family — powoGenera","text":"Produces CSV file listing genera associated number accepted species geographical distribution angiosperm family Plants World Online (POWO).","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoGenera.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract list of genera for any plant family — powoGenera","text":"","code":"powoGenera(family,            genus = NULL,            hybrid = FALSE,            country = NULL,            verbose = TRUE,            rerun = FALSE,            save = FALSE,            dir = \"results_powoGenera\",            filename = \"output\")"},{"path":"https://dboslab.github.io/expowo/reference/powoGenera.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract list of genera for any plant family — powoGenera","text":"family Either one family name vector multiple families present POWO. genus Either one genus name vector multiple genera present POWO. genus name provided, function search accepted genera known target family. hybrid Logical, TRUE, search results include hybrid genera. country Either one country name vector multiple countries. country names provided, function return genera native countries, according POWO. verbose Logical, FALSE, message showing step POWO search printed console full. rerun Logical, TRUE, previously stopped search continue left , starting last retrieved taxon. Please ensure 'filename' argument exactly matches name CSV file saved previous search, previously saved CSV file located within subfolder named current date. , please rename date subfolder accordingly.\" save Logical, TRUE, search results saved disk. dir Pathway computer's directory, file saved provided argument save set TRUE. default create directory named results_powoGenera search results saved within subfolder named current date. filename Name output file saved. default create file entitled output.","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoGenera.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract list of genera for any plant family — powoGenera","text":"table following fields: family, genus, authors, scientific_name, publication (information protologue genus), species_number, native_to_country (original distribution according political country), native_to_botanical_countries (original distribution according botanical country), introduced_to_country (exotic distribution according political country), introduced_to_botanical_countries (exotic distribution according botanical country), kew_id (genus code within Kew's databases), powo_uri (URI access genus POWO).","code":""},{"path":[]},{"path":"https://dboslab.github.io/expowo/reference/powoGenera.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract list of genera for any plant family — powoGenera","text":"Debora Zuanny & Domingos Cardoso","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoGenera.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract list of genera for any plant family — powoGenera","text":"","code":"if (FALSE) { library(expowo)  powoGenera(family = \"Lecythidaceae\",            verbose = TRUE,            save = FALSE,            dir = \"results_powoGenera\",            filename = \"Lecythidaceae_genera\")  powoGenera(family = \"Lecythidaceae\",            genus = \"Bertholletia\",            country = c(\"Argentina\", \"Brazil\", \"French Guiana\"),            verbose = TRUE,            save = FALSE,            dir = \"results_powoGenera\",            filename = \"Lecythidaceae_search\") }"},{"path":"https://dboslab.github.io/expowo/reference/powoMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Create global maps of species richness — powoMap","title":"Create global maps of species richness — powoMap","text":"Produces global-scale maps species richness political country botanical country levels. Despite originally designed create maps input data specified taxonomic group (genus family) search results powoSpecies, function also useful dataframe-formatted input data least column species one two columns associated distribution countries /botanical regions. Multiple richness maps different taxonomic groups within input data can produced automatically single run just specifying column name associated taxonomic classification.","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create global maps of species richness — powoMap","text":"","code":"powoMap(inputdf = NULL,         botctrs = FALSE,         distcol = NULL,         taxclas = NULL,         verbose = TRUE,         save = FALSE,         vir_color = \"viridis\",         bre_color = NULL,         leg_title = \"SR\",         dpi = 600,         dir = \"results_powoMap\",         filename = \"global_richness_map\",         format = \"jpg\")"},{"path":"https://dboslab.github.io/expowo/reference/powoMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create global maps of species richness — powoMap","text":"inputdf dataframe species column associated global distribution country botanical country level. species name must binomial, .e. must contain genus name specific epithet, authorship optional. species must single row corresponding full distribution countries /botanical regions within single cell respective columns, country names botanical regions separated comma. , example, standard dataframe search results function powoSpecies. botctrs Logical. TRUE, species richness maps created according botanical country subdivisions world. Also, WGSRPD folder including level 3 shapefile associated Brummitt's (2001) book fully describing World Geographical Scheme Recording Plant Distributions downloaded working directory. remove folder rename contents, function download folder . default FALSE. distcol Column name full global distribution data species political country level level 3 botanical subdivision World Geographical Scheme Recording Plant Distributions. species distribution given botanical subdivisions, must also change argument botctrs TRUE. distribution described political country names, set botctrs FALSE. taxclas character vector column name corresponding taxonomic classification species higher taxonomic level. provided, function produce, single run, global richness maps every distinct group within input data. default NULL, function generate one global species richness map entire input data. verbose Logical. FALSE, message showing map creation steps printed console full. save Logical, TRUE, global maps saved disk. vir_color character vector name code color palettes Viridis package. bre_color character vector name code color palettes RColorBrewer package. leg_title character vector displayed output map legend. Default create title called SR, acronym species richness. dpi One number range 72-4000 referring image resolution format dots per inch output file. Default create output 600 dpi. dir Pathway computer's directory, map file saved provided argument save set TRUE. default create directory named results_powoMap search results saved within subfolder named current date. filename Name output file saved. default create file entitled global_richness_map. format character vector related file format global map saved. default \"jpg\" save output Joint Photographic Experts Group (.jpg), can also choose \"pdf\" save Portable Document Format (.pdf), \"tiff\" save Tag Image File Format (.tiff) \"png\" save Portable Network Graphics (.png).","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create global maps of species richness — powoMap","text":"One list objects class c(\"gg\", \"ggplot\").","code":""},{"path":[]},{"path":"https://dboslab.github.io/expowo/reference/powoMap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create global maps of species richness — powoMap","text":"Debora Zuanny & Domingos Cardoso","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoMap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create global maps of species richness — powoMap","text":"","code":"if (FALSE) { library(expowo)  mapspdist <- powoSpecies(family = \"Martyniaceae\",                          hybridspp = FALSE,                          country = NULL,                          verbose = TRUE,                          save = FALSE,                          dir = \"results_powoSpecies\",                          filename = \"Martyniaceae_spp\")  # To create multiple maps for each genus within the input data according to # political countries. powoMap(inputdf = mapspdist,         botctrs = FALSE,         distcol = \"native_to_country\",         taxclas = \"genus\",         verbose = FALSE,         save = FALSE,         vir_color = \"viridis\",         bre_color = NULL,         leg_title = \"SR\",         dpi = 600,         dir = \"results_powoMap\",         filename = \"global_richness_country_map\",         format = \"jpg\")  # To create multiple maps for each genus within the input data according to # botanical country subdivisions. powoMap(inputdf = mapspdist,         botctrs = TRUE,         distcol = \"native_to_botanical_countries\",         taxclas = \"genus\",         verbose = FALSE,         save = FALSE,         vir_color = \"viridis\",         bre_color = NULL,         leg_title = \"SR\",         dpi = 600,         dir = \"results_powoMap\",         filename = \"global_richness_botcountry_map\",         format = \"jpg\") }"},{"path":"https://dboslab.github.io/expowo/reference/powoSpDist.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract distribution of any plant species — powoSpDist","title":"Extract distribution of any plant species — powoSpDist","text":"Produces CSV file listing geographical distribution country botanical subdivisions target species flowering plants Plants World Online (POWO).","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoSpDist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract distribution of any plant species — powoSpDist","text":"","code":"powoSpDist(family,            species = NULL,            verbose = TRUE,            save = FALSE,            dir = \"results_powoSpDist\",            filename = \"output\")"},{"path":"https://dboslab.github.io/expowo/reference/powoSpDist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract distribution of any plant species — powoSpDist","text":"family Either one family name vector multiple families present POWO. species Either one non-hybrid species name vector multiple species present POWO. species name provided, function search species accepted genera known target family. verbose Logical, FALSE, message showing step POWO search printed console full. save Logical, TRUE, search results saved disk. dir Pathway computer's directory, file saved provided argument save set TRUE. default create directory named results_powoSpDist search results saved within subfolder named current date. filename Name output file saved. default create file entitled output.","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoSpDist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract distribution of any plant species — powoSpDist","text":"table following fields: family, genus, species, taxon_name, authors, scientific_name, native_to_country (original distribution according political country), native_to_botanical_countries (original distribution according botanical country), introduced_to_country (exotic distribution according political country), introduced_to_botanical_countries (exotic distribution according botanical country), kew_id (species code within Kew's databases), powo_uri (URI access species POWO).","code":""},{"path":[]},{"path":"https://dboslab.github.io/expowo/reference/powoSpDist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract distribution of any plant species — powoSpDist","text":"Debora Zuanny & Domingos Cardoso","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoSpDist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract distribution of any plant species — powoSpDist","text":"","code":"if (FALSE) { library(expowo)  powoSpDist(family = \"Lecythidaceae\",            species = \"Lecythis pisonis\",            save = FALSE,            dir = \"results_powoSpDist\",            filename = \"L_pisonis_distribution\") }"},{"path":"https://dboslab.github.io/expowo/reference/powoSpecies.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract list of species for any plant genus and family — powoSpecies","title":"Extract list of species for any plant genus and family — powoSpecies","text":"Produces CSV file listing accepted species associated geographical distribution target genus family flowering plants Plants World Online (POWO).","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoSpecies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract list of species for any plant genus and family — powoSpecies","text":"","code":"powoSpecies(family,             genus = NULL,             hybrid = FALSE,             synonyms = FALSE,             country = NULL,             verbose = TRUE,             rerun = FALSE,             save = FALSE,             dir = \"results_powoSpecies\",             filename = \"output\")"},{"path":"https://dboslab.github.io/expowo/reference/powoSpecies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract list of species for any plant genus and family — powoSpecies","text":"family Either one family name vector multiple families present POWO. genus Either one genus name vector multiple genera present POWO. genus name provided, function search species accepted genera known target family. hybrid Logical, TRUE, search results include hybrid species. synonyms Logical, TRUE, search results include synonyms. country Either one country name vector multiple countries. country names provided, function return species native countries, according POWO. verbose Logical, FALSE, message showing step POWO search printed console full. rerun Logical, TRUE, previously stopped search continue left , starting last retrieved taxon. Please ensure 'filename' argument exactly matches name CSV file saved previous search, previously saved CSV file located within subfolder named current date. , please rename date subfolder accordingly.\" save Logical, TRUE, search results saved disk. dir Pathway computer's directory, file saved provided argument save set TRUE. default create directory named results_powoSpecies search results saved within subfolder named current date. filename Name output file saved. default create file entitled output.","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoSpecies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract list of species for any plant genus and family — powoSpecies","text":"table following fields: family, genus, species, taxon_name, authors, scientific_name, publication (information protologue species), native_to_country (original distribution according political country), native_to_botanical_countries (original distribution according botanical country), introduced_to_country (exotic distribution according political country), introduced_to_botanical_countries (exotic distribution according botanical country), kew_id (species code within Kew's databases), powo_uri (URI access species POWO).","code":""},{"path":[]},{"path":"https://dboslab.github.io/expowo/reference/powoSpecies.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract list of species for any plant genus and family — powoSpecies","text":"Debora Zuanny & Domingos Cardoso","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoSpecies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract list of species for any plant genus and family — powoSpecies","text":"","code":"if (FALSE) { library(expowo)  powoSpecies(family = \"Martyniaceae\",             synonyms = TRUE,             country = c(\"Argentina\", \"Brazil\", \"French Guiana\"),             save = FALSE,             dir = \"Martyniaceae_results_powoSpecies\",             filename = \"Martyniaceae_spp\") }"},{"path":"https://dboslab.github.io/expowo/reference/saveCSV.html","id":null,"dir":"Reference","previous_headings":"","what":"Fastly save CSV file within a current date folder — saveCSV","title":"Fastly save CSV file within a current date folder — saveCSV","text":"Uses fwrite fastly write CSV file within current date subfolder provided specific directory.","code":""},{"path":"https://dboslab.github.io/expowo/reference/saveCSV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fastly save CSV file within a current date folder — saveCSV","text":"","code":"saveCSV(df,         dir = \"results\",         filename = \"output\",         verbose = TRUE,         append = FALSE,         save = TRUE,         foldername = NULL)"},{"path":"https://dboslab.github.io/expowo/reference/saveCSV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fastly save CSV file within a current date folder — saveCSV","text":"df input list length vectors (e.g. data.frame data.table). dir Pathway computer's directory, file saved provided argument save set TRUE. default create directory named results input data.frame saved within subfolder named current date. filename Name output file saved. default create file entitled output. verbose Logical, FALSE, message showing saving process printed console full. append Logical, TRUE, file opened append mode column names (header row) written. save Logical, FALSE, input data.frame saved disk. foldername parameter internal use expowo's main functions. must keep always NULL.","code":""},{"path":"https://dboslab.github.io/expowo/reference/saveCSV.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fastly save CSV file within a current date folder — saveCSV","text":"Debora Zuanny & Domingos Cardoso","code":""},{"path":"https://dboslab.github.io/expowo/reference/saveCSV.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fastly save CSV file within a current date folder — saveCSV","text":"","code":"# \\donttest{ library(expowo)  res <- powoGenera(family = \"Lecythidaceae\",                   verbose = TRUE,                   save = FALSE) #> Searching... Lecythidaceae 1/1 #> Searching distribution and sp number of... Allantoma Lecythidaceae 1/24 #> Searching distribution and sp number of... Asteranthos Lecythidaceae 2/24 #> Searching distribution and sp number of... Barringtonia Lecythidaceae 3/24 #> Searching distribution and sp number of... Bertholletia Lecythidaceae 4/24 #> Searching distribution and sp number of... Brazzeia Lecythidaceae 5/24 #> Searching distribution and sp number of... Careya Lecythidaceae 6/24 #> Searching distribution and sp number of... Cariniana Lecythidaceae 7/24 #> Searching distribution and sp number of... Chydenanthus Lecythidaceae 8/24 #> Searching distribution and sp number of... Corythophora Lecythidaceae 9/24 #> Searching distribution and sp number of... Couratari Lecythidaceae 10/24 #> Searching distribution and sp number of... Couroupita Lecythidaceae 11/24 #> Searching distribution and sp number of... Crateranthus Lecythidaceae 12/24 #> Searching distribution and sp number of... Eschweilera Lecythidaceae 13/24 #> Searching distribution and sp number of... Foetidia Lecythidaceae 14/24 #> Searching distribution and sp number of... Grias Lecythidaceae 15/24 #> Searching distribution and sp number of... Gustavia Lecythidaceae 16/24 #> Searching distribution and sp number of... Lecythis Lecythidaceae 17/24 #> Searching distribution and sp number of... Napoleonaea Lecythidaceae 18/24 #> Searching distribution and sp number of... Oubanguia Lecythidaceae 19/24 #> Searching distribution and sp number of... Petersianthus Lecythidaceae 20/24 #> Searching distribution and sp number of... Pierrina Lecythidaceae 21/24 #> Searching distribution and sp number of... Planchonia Lecythidaceae 22/24 #> Searching distribution and sp number of... Rhaptopetalum Lecythidaceae 23/24 #> Searching distribution and sp number of... Scytopetalum Lecythidaceae 24/24  saveCSV(res,         dir = \"results_powoGenera\",         filename = \"Lecythidaceae_search\",         append = FALSE) #> Writing spreadsheet 'Lecythidaceae_search.csv' within 'results_powoGenera/27fev2024' on disk. # }"},{"path":"https://dboslab.github.io/expowo/reference/topGen.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the top most species-rich genera of any plant family — topGen","title":"Extract the top most species-rich genera of any plant family — topGen","text":"Produces CSV file listing top diverse genera target botanical family flowering plants Plants World Online (POWO).","code":""},{"path":"https://dboslab.github.io/expowo/reference/topGen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the top most species-rich genera of any plant family — topGen","text":"","code":"topGen(family,        limit = 10,        verbose = TRUE,        save = FALSE,        dir = \"results_topGen\",        filename = \"output\")"},{"path":"https://dboslab.github.io/expowo/reference/topGen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the top most species-rich genera of any plant family — topGen","text":"family Either one family name vector multiple families present POWO. limit defined numerical value limit diverse genera selected within plant family. default select top ten richest genera. verbose Logical, FALSE, message showing step POWO search printed console full. save Logical, TRUE, search results saved disk. dir Pathway computer's directory, file saved provided argument save set TRUE. default create directory named results_topGen search results saved within subfolder named current date. filename Name output file saved. default create file entitled output.","code":""},{"path":"https://dboslab.github.io/expowo/reference/topGen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the top most species-rich genera of any plant family — topGen","text":"table following fields: family, genus, authors, scientific_name, species_number (counting species within genus), kew_id (genus code within Kew's databases), powo_uri (URI access genus POWO).","code":""},{"path":[]},{"path":"https://dboslab.github.io/expowo/reference/topGen.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract the top most species-rich genera of any plant family — topGen","text":"Debora Zuanny & Domingos Cardoso","code":""},{"path":"https://dboslab.github.io/expowo/reference/topGen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the top most species-rich genera of any plant family — topGen","text":"","code":"if (FALSE) { library(expowo)  topGen(family = \"Lecythidaceae\",        limit = 10,        save = FALSE,        dir = \"results_topGen\",        filename = \"Lecythidaceae_top_ten\") }"}]
