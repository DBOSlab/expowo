[{"path":"https://dboslab.github.io/expowo/articles/associated_data.html","id":"powocodes---a-complete-list-of-angiosperm-families-and-associated-uri-addresses","dir":"Articles","previous_headings":"","what":"POWOcodes - A complete list of angiosperm families and associated URI addresses","title":"Associated data","text":"data POWOcodes dataframe containing list families flowering plants according APG IV retrieved POWO database using functions apgFamilies get_pow package taxize. useful use data purpose query many plant families . Despite names plant families, used arguments expowo’s functions, URI, main way accessing family page Plants World Online. call associated data R environment, use function data.","code":"utils::data(\"POWOcodes\")"},{"path":"https://dboslab.github.io/expowo/articles/associated_data.html","id":"angiodata---a-dataframe-of-angiosperm-species","dir":"Articles","previous_headings":"","what":"angioData - A dataframe of Angiosperm species","title":"Associated data","text":"data angioData retrieved POWO database comprises species families flowering plants associated data. publication purposes package size limitation, selected families include associated data let information easily available. Currently, 11 plant families listed Table 1 gathered using powoSpecies. last update data Nov 2022. Using function data, returns dataframe listing accepted species (excluding hybrid species), publication, authorship, global geographic distribution country botanical level. global classification botanical divisions follows World Geographical Scheme Recording Plant Distributions, already associated taxon’s distribution POWO. example shows call angioData:","code":"utils::data(\"angioData\")"},{"path":"https://dboslab.github.io/expowo/articles/associated_data.html","id":"botregions---countries-and-associated-classification-of-botanical-divisions","dir":"Articles","previous_headings":"","what":"botregions - Countries and associated classification of botanical divisions","title":"Associated data","text":"data botregions dataframe containing countries World associated classification botanical divisions according World Geographical Scheme Recording Plant Distributions. retrieved using packages rgdal, ggplot2, broom, sf raster. useful use data purpose query many plant families . Despite names plant families, used arguments expowo’s functions, URI, main way accessing family page Plants World Online database. call associated data R environment, use function data.","code":"utils::data(\"botregions\")"},{"path":"https://dboslab.github.io/expowo/articles/associated_data.html","id":"botdivmap---a-global-map-of-botanical-country-subdivisions","dir":"Articles","previous_headings":"","what":"botdivmap - A global map of botanical country subdivisions","title":"Associated data","text":"data botdivmap Sf dataframe containing global-scale map botanical countries (level 3) according World Geographical Scheme Recording Plant Distributions. retrieved using packages rgdal, ggplot2 sf. data useful used within powoMap function package purpose plot native distribution species genus according botanical countries. call associated data R environment, use function data.","code":"utils::data(\"botdivmap\")"},{"path":"https://dboslab.github.io/expowo/articles/mapping_distribution.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Mapping global distribution for any plant genus or family","text":"expowo CRAN yet can install latest development version GitHub:","code":"#install.packages(\"devtools\") devtools::install_github(\"DBOSlab/expowo\") library(expowo)"},{"path":"https://dboslab.github.io/expowo/articles/mapping_distribution.html","id":"mining-species-distribution-from-powo-to-use-as-input-data-in-powomap","dir":"Articles","previous_headings":"","what":"1. Mining species distribution from POWO to use as input data in powoMap","title":"Mapping global distribution for any plant genus or family","text":"create global distribution maps using powoMap function, use first package’s associated powoSpecies function get distribution information species target family genus. also possible adjust one arguments powoSpecies function extract data genus list genera. See details another article . example shows mine distribution specific genus Lecythidaceae. defining vector within argument genus, function search species associated distribution data just genus Cariniana. Note create object called mapspdist, dataframe-formatted input data create map. output shown (TABLE 1) simplified version, removed columns focus display just distribution data. TABLE 1. general powoSpecies search mining distribution Lecythidaceae genus Cariniana.","code":"library(taxize)  fam <- \"Lecythidaceae\" powocodes <- cbind(family = fam,                    data.frame(taxize::get_pow(fam)))  mapspdist <- powoSpecies(powocodes$family, powocodes$uri,                          genus = \"Cariniana\",                          hybridspp = FALSE,                          country = NULL,                          verbose = TRUE,                          save = TRUE,                          dir = \"results_powoSpecies/\",                          filename = \"Lecythidaceae_Cariniana\")"},{"path":"https://dboslab.github.io/expowo/articles/mapping_distribution.html","id":"creating-global-scale-map-for-one-genus-to-show-species-richness-at-political-country-level","dir":"Articles","previous_headings":"","what":"2. Creating global-scale map for one genus to show species richness at political country level","title":"Mapping global distribution for any plant genus or family","text":"generate global distribution map one genus show species richness political country level, use previously generated mapspdist object input data powoMap function set map_div argument “native_to_country”. column dataframe-formatted mapspdist object associated species distribution political country. example shows create global distribution map Cariniana’s species richness colored viridis palette Viridis package. set arguments vir_color bre_color Viridis RColorBrewer color palettes, two maps colored respectively color vectors automatically generated. Different file formats resolutions (e.g. JPG, PDF, PNG, TIFF) also supported setting arguments format dpi. FIGURE 1. Global species richness genus Cariniana country level colored viridis scale.","code":"powoMap(data = mapspdist,         botctrs = NULL,         map_div = \"native_to_country\",         multigen = TRUE,         verbose = FALSE,         vir_color = \"viridis\",         bre_color = NULL,         leg_title = \"SR\",         dpi = 600,         dir = \"results_powoMap/\",         filename = \"global_richness_country_map\",         format = \"jpg\")"},{"path":"https://dboslab.github.io/expowo/articles/mapping_distribution.html","id":"creating-global-scale-map-for-one-genus-to-show-species-richness-at-botanical-country-level","dir":"Articles","previous_headings":"","what":"3. Creating global-scale map for one genus to show species richness at botanical country level","title":"Mapping global distribution for any plant genus or family","text":"generate global distribution map one genus show species richness botanical country level, run first data(botdivmap) load global map sf data.frame format comes associated expowo package. resulting object input argument botctrs within powoMap function. , use previously generated mapspdist object input data powoMap function set map_div argument “native_to_botanical_countries”. column dataframe-formatted mapspdist object associated species distribution botanical countries. example shows create global distribution map Cariniana’s species richness colored viridis palette Viridis package. set arguments vir_color bre_color Viridis RColorBrewer color palettes, two maps colored respectively color vectors automatically generated. Different file formats resolutions (e.g. JPG, PDF, PNG, TIFF) also supported setting arguments format dpi. FIGURE 2. Global species richness genus Cariniana botanical country level colored viridis scale.","code":"data(botdivmap)  powoMap(data = mapspdist,         botctrs = botdivmap,         map_div = \"native_to_botanical_countries\",         multigen = TRUE,         verbose = FALSE,         vir_color = \"viridis\",         bre_color = NULL,         leg_title = \"SR\",         dpi = 600,         dir = \"results_powoMap/\",         filename = \"global_richness_botcountry_map\",         format = \"jpg\")"},{"path":"https://dboslab.github.io/expowo/articles/mapping_distribution.html","id":"creating-global-scale-map-of-species-richness-for-an-entire-family","dir":"Articles","previous_headings":"","what":"4. Creating global-scale map of species richness for an entire family","title":"Mapping global distribution for any plant genus or family","text":"generate family-level global distribution map species richness, use powoSpecies function without genus constraint query full species list entire family associated distribution data. , resulting query object used input data powoMap function. example uses previously generated dataframe-formatted mapspdist object input data powoMap function, map_div argument set “native_to_country”, multigen argument set FALSE, vir_color argument set “viridis”, bre_color argument set “Spectral”, automatically produce two global distribution maps Lecythidaceae’s species richness country level, distinctly colored Viridis RColorBrewer color palettes. Note set multigen TRUE, powoMap function produced individual distribution maps species richness every single genus within Lecythidaceae, stored desired directory dir argument. FIGURE 3. Global species richness Lecythidaceae country level colored viridis scale. FIGURE 4. Global species richness Lecythidaceae country level colored Spectral scale. example uses previously generated dataframe-formatted mapspdist object input data powoMap function, map_div argument set “native_to_botanical_countries”, vir_color argument set “viridis”, bre_color argument set “Spectral”, automatically produce two global distribution maps Lecythidaceae’s species richness botanical country-level, distinctly colored Viridis RColorBrewer color palettes. Note set multigen TRUE, powoMap function produced individual distribution maps species richness every single genus within Lecythidaceae, stored desired directory dir argument. FIGURE 5. Global species richness Lecythidaceae botanical country level colored viridis scale. FIGURE 6. Global species richness Lecythidaceae botanical country level colored Spectral scale.","code":"data(\"POWOcodes\") fam <- \"Lecythidaceae\" powocodes <- data.frame(family = fam,                         uri = POWOcodes$uri[POWOcodes$family %in% fam])  mapspdist <- powoSpecies(powocodes$family, powocodes$uri,                          genus = NULL,                          hybridspp = FALSE,                          country = NULL,                          verbose = FALSE,                          save = FALSE,                          dir = \"results_powoSpecies/\",                          filename = \"Lecythidaceae_Cariniana\") data(botdivmap)  powoMap(data = mapspdist,         botctrs = botdivmap,         map_div = \"native_to_country\",         multigen = FALSE,         verbose = FALSE,         vir_color = \"viridis\",         bre_color = \"Spectral\",         leg_title = \"SR\",         dpi = 600,         dir = \"results_powoMap/\",         filename = \"global_richness_botcountry_map\",         format = \"jpg\") data(botdivmap)  powoMap(data = mapspdist,         botctrs = botdivmap,         map_div = \"native_to_botanical_countries\",         multigen = FALSE,         verbose = FALSE,         vir_color = \"viridis\",         bre_color = \"Spectral\",         leg_title = \"SR\",         dpi = 600,         dir = \"results_powoMap/\",         filename = \"global_richness_botcountry_map\",         format = \"jpg\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_accepted_genera.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Mining genus list for any plant family","text":"expowo CRAN yet can install latest development version GitHub:","code":"#install.packages(\"devtools\") devtools::install_github(\"DBOSlab/expowo\") library(expowo)"},{"path":"https://dboslab.github.io/expowo/articles/mining_accepted_genera.html","id":"mining-all-accepted-genera-for-any-angiosperm-family","dir":"Articles","previous_headings":"","what":"Mining all accepted genera for any angiosperm family","title":"Mining genus list for any plant family","text":"function powoGenera returns dataframe saves CSV file listing genera associated number accepted species global geographic distribution country botanical level. global classification botanical divisions follows World Geographical Scheme Recording Plant Distributions, already associated taxon’s distribution POWO. TABLE 1. general powoGenera search mining accepted genera specific angiosperm families.","code":"library(taxize) fam <- c(\"Aristolochiaceae\", \"Begoniaceae\", \"Martyniaceae\") powocodes <- cbind(family = fam,                    data.frame(taxize::get_pow(fam)))  powoGenera(powocodes$family, powocodes$uri,            verbose = FALSE,            save = TRUE,            dir = \"results_powoGenera/\",            filename = \"Arist_Begon_Martyniaceae_search\") #> ERROR: Aristolochia Aristolochiaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:330834-2'  #> ERROR: Asarum Aristolochiaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:3127-1'  #> ERROR: Euglypha Aristolochiaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:295147-2'  #> ERROR: Hydnora Aristolochiaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:30159275-2'  #> ERROR: Lactoris Aristolochiaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:32025-1'  #> ERROR: Prosopanche Aristolochiaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:14132-1'  #> ERROR: Saruma Aristolochiaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:3165-1'  #> ERROR: Thottea Aristolochiaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:3169-1'  #> ERROR: Begonia Begoniaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:327437-2'  #> ERROR: Hillebrandia Begoniaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:3888-1'  #> ERROR: Craniolaria Martyniaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:31831-1'  #> ERROR: Holoregmia Martyniaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:327223-2'  #> ERROR: Ibicella Martyniaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:26127-1'  #> ERROR: Martynia Martyniaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:30002379-2'  #> ERROR: Proboscidea Martyniaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:30064181-2'"},{"path":"https://dboslab.github.io/expowo/articles/mining_accepted_genera.html","id":"mining-all-accepted-genera-for-all-angiosperm-families","dir":"Articles","previous_headings":"","what":"Mining all accepted genera for all angiosperm families","title":"Mining genus list for any plant family","text":"mine global genus checklist associated species number distribution families flowering plants, recommend load dataframe-formatted data object called POWOcodes comes associated expowo package. POWOcodes data object already contains URI addresses angiosperms families recognized POWO database, need perform time-consuming URI search using taxize. example shows mine global checklist accepted genera flowering plants using vector angiosperm families associated URI addresses stored POWOcodes object.","code":"data(POWOcodes)  powoGenera(POWOcodes$family, POWOcodes$uri,            verbose = TRUE,            save = TRUE,            dir = \"results_powoGenera/\",            filename = \"all_angiosperm_genera\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_accepted_genera.html","id":"narrowing-down-the-powogenera-search-based-on-a-specified-country-vector","dir":"Articles","previous_headings":"","what":"Narrowing down the powoGenera search based on a specified country vector","title":"Mining genus list for any plant family","text":"can also narrow search accepted genera family focus just particular country list countries. just need define vector country names argument country. example , see originally searched genera within families Aristolochiaceae, Lecythidaceae, Fagaceae, Dipterocarpaceae, function returned list genera Aristolochiaceae Lecythidaceae, remaining families genera recorded list countries interest, .e. Argentina, Brazil French Guiana. TABLE 2. powoGenera search based specified country vector.","code":"library(taxize)  fam <- c(\"Aristolochiaceae\", \"Dipterocarpaceae\", \"Fagaceae\", \"Lecythidaceae\") powocodes <- cbind(family = fam,                    data.frame(taxize::get_pow(fam)))  powoGenera(powocodes$family, powocodes$uri,            country = c(\"Argentina\", \"Brazil\", \"French Guiana\"),            verbose = FALSE,            save = TRUE,            dir = \"results_powoGenera/\",            filename = \"country_constrained_search\") #> ERROR: Aristolochia Aristolochiaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:330834-2'  #> ERROR: Asarum Aristolochiaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:3127-1'  #> ERROR: Euglypha Aristolochiaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:295147-2'  #> ERROR: Hydnora Aristolochiaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:30159275-2'  #> ERROR: Lactoris Aristolochiaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:32025-1'  #> ERROR: Prosopanche Aristolochiaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:14132-1'  #> ERROR: Saruma Aristolochiaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:3165-1'  #> ERROR: Thottea Aristolochiaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:3169-1'  #> ERROR: Anisoptera Dipterocarpaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:14351-1'  #> ERROR: Cotylelobium Dipterocarpaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:14359-1'  #> ERROR: Dipterocarpus Dipterocarpaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:14361-1'  #> ERROR: Dryobalanops Dipterocarpaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:329417-2'  #> ERROR: Hopea Dipterocarpaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:329418-2'  #> ERROR: Marquesia Dipterocarpaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:16415-1'  #> ERROR: Monotes Dipterocarpaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:14378-1'  #> ERROR: Neobalanocarpus Dipterocarpaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:14380-1'  #> ERROR: Parashorea Dipterocarpaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:14388-1'  #> ERROR: Pseudomonotes Dipterocarpaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:985066-1'  #> ERROR: Shorea Dipterocarpaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:14402-1'  #> ERROR: Stemonoporus Dipterocarpaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:14404-1'  #> ERROR: Upuna Dipterocarpaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:14408-1'  #> ERROR: Vateria Dipterocarpaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:14409-1'  #> ERROR: Vateriopsis Dipterocarpaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:14410-1'  #> ERROR: Vatica Dipterocarpaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:14411-1'  #> ERROR: Castanea Fagaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:30004045-2'  #> ERROR: Castanopsis Fagaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:13483-1'  #> ERROR: Chrysolepis Fagaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:296758-2'  #> ERROR: Fagus Fagaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:30048723-2'  #> ERROR: Lithocarpus Fagaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:30007732-2'  #> ERROR: Notholithocarpus Fagaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:60451160-2'  #> ERROR: Quercus Fagaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:325819-2'  #> ERROR: Trigonobalanus Fagaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:16078-1'  #> ERROR: Allantoma Lecythidaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:27400-1'  #> ERROR: Asteranthos Lecythidaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:27417-1'  #> ERROR: Barringtonia Lecythidaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:329914-2'  #> ERROR: Bertholletia Lecythidaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:27438-1'  #> ERROR: Brazzeia Lecythidaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:39384-1'  #> ERROR: Careya Lecythidaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:331462-2'  #> ERROR: Cariniana Lecythidaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:27473-1'  #> ERROR: Chydenanthus Lecythidaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:27484-1'  #> ERROR: Corythophora Lecythidaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:296913-2'  #> ERROR: Couratari Lecythidaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:27498-1'  #> ERROR: Couroupita Lecythidaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:27499-1'  #> ERROR: Crateranthus Lecythidaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:21537-1'  #> ERROR: Eschweilera Lecythidaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:326987-2'  #> ERROR: Foetidia Lecythidaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:27546-1'  #> ERROR: Grias Lecythidaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:326794-2'  #> ERROR: Gustavia Lecythidaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:331637-2'  #> ERROR: Lecythis Lecythidaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:27598-1'  #> ERROR: Napoleonaea Lecythidaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:326493-2'  #> ERROR: Oubanguia Lecythidaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:39491-1'  #> ERROR: Petersianthus Lecythidaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:21543-1'  #> ERROR: Pierrina Lecythidaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:38125-1'  #> ERROR: Planchonia Lecythidaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:27706-1'  #> ERROR: Rhaptopetalum Lecythidaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:325982-2'  #> ERROR: Scytopetalum Lecythidaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:28287-1'"},{"path":"https://dboslab.github.io/expowo/articles/mining_accepted_genera.html","id":"narrowing-down-the-powogenera-search-based-on-a-specified-genus-vector","dir":"Articles","previous_headings":"","what":"Narrowing down the powoGenera search based on a specified genus vector","title":"Mining genus list for any plant family","text":"may want retrieve information just one list accepted genera given country (list countries). Just like , need define vector genus names argument genus vector country names argument country. example , see searched just genera Asarum Bertholletia families Aristolochiaceae Lecythidaceae, function returned Lecythidaceae genus Bertholletia, Asarum occur provided list countries, .e. Brazil French Guiana. TABLE 3. powoGenera search based specified genus country vectors.","code":"library(taxize) fam <- c(\"Aristolochiaceae\", \"Lecythidaceae\") powocodes <- cbind(family = fam,                    data.frame(taxize::get_pow(fam)))  powoGenera(powocodes$family, powocodes$uri,            genus = c(\"Asarum\", \"Bertholletia\"),            country = c(\"Brazil\", \"French Guiana\"),            verbose = TRUE,            save = TRUE,            dir = \"results_powoGenera/\",            filename = \"genus_country_constrained_search\") #> ERROR: Asarum Aristolochiaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:3127-1'  #> ERROR: Bertholletia Lecythidaceae cannot open the connection to 'https://www.plantsoftheworldonline.org/taxon/urn:lsid:ipni.org:names:27438-1'"},{"path":"https://dboslab.github.io/expowo/articles/mining_accepted_species.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Mining species list for any plant family","text":"expowo CRAN yet can install latest development version GitHub:","code":"#install.packages(\"devtools\") devtools::install_github(\"DBOSlab/expowo\") library(expowo)"},{"path":"https://dboslab.github.io/expowo/articles/mining_accepted_species.html","id":"mining-all-accepted-species-for-any-angiosperm-family","dir":"Articles","previous_headings":"","what":"Mining all accepted species for any angiosperm family","title":"Mining species list for any plant family","text":"function powoSpecies returns dataframe saves CSV file listing accepted species (including hybrid species ), publication, authorship, global geographic distribution country botanical level family flowering plants. global classification botanical divisions follows World Geographical Scheme Recording Plant Distributions, already associated taxon’s distribution POWO. example shows mine accepted species specified vector families. output shown (TABLE 1) simplified version, removed columns (genus, epithet authors) focus display taxonomic distribution data. TABLE 1. general powoSpecies search mining accepted species specific angiosperm families.","code":"library(taxize)  fam <- c(\"Amborellaceae\", \"Cabombaceae\", \"Martyniaceae\") powocodes <- cbind(family = fam,                    data.frame(taxize::get_pow(fam)))  res <- powoSpecies(powocodes$family, powocodes$uri,                    hybridspp = FALSE,                    verbose = TRUE,                    save = TRUE,                    dir = \"results_powoSpecies/\",                    filename = \"Ambor_Cabom_Martyniaceae_search\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_accepted_species.html","id":"narrowing-down-the-powospecies-search-based-on-a-specified-country-vector","dir":"Articles","previous_headings":"","what":"Narrowing down the powoSpecies search based on a specified country vector","title":"Mining species list for any plant family","text":"can also narrow species checklist search family focusing just particular country list countries. just need define vector country names argument . example , note originally searched species within families Amborellaceae, Cabombaceae, Martyniaceae, function returned smaller species list, many species searched families recorded specified vector country, .e. Brazil Colombia. TABLE 2. powoSpecies search based specified country vector.","code":"library(taxize)  fam <- c(\"Amborellaceae\", \"Cabombaceae\", \"Martyniaceae\") powocodes <- cbind(family = fam,                    data.frame(taxize::get_pow(fam)))  powoSpecies(powocodes$family, powocodes$uri,             hybridspp = FALSE,             country = c(\"Brazil\", \"Colombia\"),             verbose = TRUE,             save = F,             dir = \"results_powoSpecies/\",             filename = \"country_constrained_search\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_accepted_species.html","id":"narrowing-down-the-powospecies-search-based-on-a-specified-genus-and-country-vector","dir":"Articles","previous_headings":"","what":"Narrowing down the powoSpecies search based on a specified genus and country vector","title":"Mining species list for any plant family","text":"may want retrieve information just one list accepted genera given country (list countries). Just like , need define vector genus names argument vector country names argument . example , see searched just genera Amborella Cabomba families Amborellaceae Cabombaceae, function returned Cabombaceae genus Cabomba, Amborella occur provided list countries, .e. Argentina, French Guiana, Brazil. TABLE 3. powoSpecies search based specified genus country vectors.","code":"library(taxize)  fam <- c(\"Amborellaceae\", \"Cabombaceae\") powocodes <- cbind(family = fam,                    data.frame(taxize::get_pow(fam)))  powoSpecies(powocodes$family, powocodes$uri,             genus = c(\"Amborella\", \"Cabomba\"),             hybridspp = FALSE,             country = c(\"Argentina\", \"French Guiana\", \"Brazil\"),             verbose = TRUE,             save = F,             dir = \"results_powoSpecies/\",             filename = \"country_and_genus_constrained_search\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_accepted_species.html","id":"mining-all-accepted-species-for-all-angiosperm-families","dir":"Articles","previous_headings":"","what":"Mining all accepted species for all angiosperm families","title":"Mining species list for any plant family","text":"mine species checklist families flowering plants, recommend load dataframe-formatted data object called POWOcodes comes associated expowo package. POWOcodes data object already contains URI addresses angiosperms families recognized POWO database, need perform time-consuming URI search using taxize. example shows mine global checklist accepted species flowering plants using vector angiosperm families associated URI addresses stored POWOcodes object.","code":"utils::data(\"POWOcodes\")  powoSpecies(POWOcodes$family, POWOcodes$uri,             hybridspp = TRUE,             verbose = TRUE,             save = TRUE,             dir = \"results_powoSpecies/\",             filename = \"all_angiosperm_species\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_family_species_number.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Mining species number of any plant family","text":"expowo CRAN yet can install latest development version GitHub:","code":"#install.packages(\"devtools\") devtools::install_github(\"DBOSlab/expowo\") library(expowo)"},{"path":"https://dboslab.github.io/expowo/articles/mining_family_species_number.html","id":"mining-the-total-species-number-for-any-angiosperm-family","dir":"Articles","previous_headings":"","what":"Mining the total species number for any angiosperm family","title":"Mining species number of any plant family","text":"function powoFam returns dataframe saves CSV file listing total species number (excluding hybrid species) queried plant families. example shows mine total species number defining vector four families: Amborellaceae, Cabombaceae, Lecythidaceae, Martyniaceae. resulting output (TABLE 1) also saved directly specified directory results_powoFam. TABLE 1. general powoFam search mining total species number four angiosperm families.","code":"library(taxize)  fam <- c(\"Amborellaceae\", \"Cabombaceae\", \"Lecythidaceae\", \"Martyniaceae\") powocodes <- cbind(family = fam,                    data.frame(taxize::get_pow(fam)))  powoFam(powocodes$family, powocodes$uri,         verbose = TRUE,         save = TRUE,         dir = \"results_powoFam/\",         filename = \"Ambo_Camb_Lecy_Martyniaceae_diversity\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_family_species_number.html","id":"mining-species-number-accross-all-angiosperm-families","dir":"Articles","previous_headings":"","what":"Mining species number accross all angiosperm families","title":"Mining species number of any plant family","text":"mine species number families flowering plants, recommend load data frame-formatted object called POWOcodes comes associated expowo package. POWOcodes data object already contains URI addresses angiosperms families recognized POWO database, need perform time-consuming URI search using taxize. example shows mine species number plant families using vector angiosperm families associated URI addresses stored POWOcodes object.","code":"utils::data(POWOcodes)  powoFam(POWOcodes$family, POWOcodes$uri,         verbose = TRUE,         save = TRUE,         dir = \"results_powoFam/\",         filename = \"all_angiosperms_species_number\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_megadiverse_genera.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Mining megadiverse genera of flowering plants","text":"expowo CRAN yet can install latest development version GitHub:","code":"#install.packages(\"devtools\") devtools::install_github(\"DBOSlab/expowo\") library(expowo)"},{"path":"https://dboslab.github.io/expowo/articles/mining_megadiverse_genera.html","id":"mining-megadiverse-genera-for-any-angiosperm-family","dir":"Articles","previous_headings":"","what":"Mining megadiverse genera for any angiosperm family","title":"Mining megadiverse genera of flowering plants","text":"function megaGen uses specified threshold number return dataframe save CSV file listing megadiverse genera family flowering plants associated number accepted species. TABLE 1. general megaGen search mining megadiverse genera specific angiosperm families, based specified threshold 500 species.","code":"library(taxize)  fam <- c(\"Aristolochiaceae\", \"Begoniaceae\", \"Piperaceae\", \"Solanaceae\") powocodes <- cbind(family = fam,                    data.frame(taxize::get_pow(fam)))  megaGen(powocodes$family, powocodes$uri,         thld = 500,         verbose = TRUE,         save = TRUE,         dir = \"results_megaGen/\",         filename = \"Arist_Begon_Piper_Solanaceae_search\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_megadiverse_genera.html","id":"mining-megadiverse-genera-accross-all-angiosperm-families","dir":"Articles","previous_headings":"","what":"Mining megadiverse genera accross all angiosperm families","title":"Mining megadiverse genera of flowering plants","text":"mine global checklist megadiverse genera families flowering plants, including associated species number, recommend load dataframe-formatted data object called POWOcodes comes associated expowo package. POWOcodes data object already contains URI addresses angiosperms families recognized POWO database, need perform time-consuming URI search using taxize. example shows mine global checklist speciose genera flowering plants using vector angiosperm families associated URI addresses stored POWOcodes object.","code":"data(POWOcodes)  megaGen(POWOcodes$family, POWOcodes$uri,         thld = 500,         verbose = TRUE,         save = TRUE,         dir = \"results_megaGen/\",         filename = \"all_megadiverse_angiosperm_genera\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_species_distribution.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Mining distribution for any plant species","text":"expowo CRAN yet can install latest development version GitHub:","code":"#install.packages(\"devtools\") devtools::install_github(\"DBOSlab/expowo\") library(expowo)"},{"path":"https://dboslab.github.io/expowo/articles/mining_species_distribution.html","id":"mining-the-distribution-for-any-angiosperm-species","dir":"Articles","previous_headings":"","what":"Mining the distribution for any angiosperm species","title":"Mining distribution for any plant species","text":"function powoSpDist returns dataframe saves CSV file listing entire global distribution country botanical level given species scientific name(s) (excluding hybrid species), genus, publication authorship. global classification botanical divisions follows World Geographical Scheme Recording Plant Distributions, already associated taxon’s distribution POWO. example shows mine distribution specified vector two species. output shown (table) simplified removing family distribution according botanical subdivision columns. TABLE 1. general powoSpDist search mining distribution two angiosperm species.","code":"library(taxize)  fam <- c(\"Araceae\", \"Lecythidaceae\") powocodes <- cbind(family = fam,                    data.frame(taxize::get_pow(fam)))  powoSpDist(powocodes$family, powocodes$uri,            species = c(\"Anthurium longicaudatum\", \"Lecythis pisonis\"),            verbose = TRUE,            save = TRUE,            dir = \"results_powoSpDist/\",            filename = \"Araceae_Lecythidaceae\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_species_distribution.html","id":"mining-distribution-for-all-angiosperm-species","dir":"Articles","previous_headings":"","what":"Mining distribution for all angiosperm species","title":"Mining distribution for any plant species","text":"mine distribution checklist accepted species flowering plants, can load dataframe-formatted data object called POWOcodes comes associated expowo package. POWOcodes data object already contains URI addresses angiosperms families recognized POWO database, need perform time-consuming URI search using taxize. example shows mine global distribution accepted non hybrid species flowering plants using vector angiosperm families associated URI addresses stored POWOcodes object. Note argument species NULL, search constrained particular species, .e. function return global distribution species queried families.","code":"data(POWOcodes)  powoSpDist(POWOcodes$family, POWOcodes$uri,            species = NULL,            verbose = TRUE,            save = TRUE,            dir = \"results_powoSpDist/\",            filename = \"all_angiosperm_distribution\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_toptenrichest_genera.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Mining the top ten richest genera of flowering plants","text":"expowo CRAN yet can install latest development version GitHub:","code":"#install.packages(\"devtools\") devtools::install_github(\"DBOSlab/expowo\") library(expowo)"},{"path":"https://dboslab.github.io/expowo/articles/mining_toptenrichest_genera.html","id":"mining-the-top-ten-richest-genera-for-any-angiosperm-family","dir":"Articles","previous_headings":"","what":"Mining the top ten richest genera for any angiosperm family","title":"Mining the top ten richest genera of flowering plants","text":"function toptenGen relatively similar megaGen, instead using specific threshold, saves CSV file listing top ten species-rich genera target angiosperm family, associated number accepted species. example , columns omitted, rows show top ten three chosen families: Bignoniaceae, Solanaceae Lecythidaceae. Note table 30 rows, expected multiply family (n = 3) ten. error, since plant families many genera, case Begoniaceae. TABLE 1. general toptenGen search mining top ten species rich genera specific angiosperm families.","code":"library(taxize)  fam <- c(\"Bignoniaceae\", \"Solanaceae\", \"Lecythidaceae\") powocodes <- cbind(family = fam,                    data.frame(taxize::get_pow(fam)))  toptenGen(powocodes$family, powocodes$uri,           verbose = TRUE,           save = TRUE,           dir = \"results_toptenGen/\",           filename = \"Bigno_Lecyt_Solanaceae_search\")"},{"path":"https://dboslab.github.io/expowo/articles/mining_toptenrichest_genera.html","id":"mining-the-top-ten-richest-genera-accross-all-angiosperm-families","dir":"Articles","previous_headings":"","what":"Mining the top ten richest genera accross all angiosperm families","title":"Mining the top ten richest genera of flowering plants","text":"mine global checklist top ten species-richest genera families flowering plants, including associated species number, recommend load dataframe-formatted data object called POWOcodes comes associated expowo package. POWOcodes data object already contains URI addresses angiosperms families recognized POWO database, need perform time-consuming URI search using taxize. example shows mine top ten species-rich genera flowering plants using vector angiosperm families associated URI addresses stored POWOcodes object.","code":"data(POWOcodes)  toptenGen(POWOcodes$family, POWOcodes$uri,           verbose = TRUE,           save = TRUE,           dir = \"results_toptenGen/\",           filename = \"all_toptenrichest_angiosperm_genera\")"},{"path":"https://dboslab.github.io/expowo/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Debora Zuanny. Author, maintainer, copyright holder. Domingos Cardoso. Author, contributor, copyright holder.","code":""},{"path":"https://dboslab.github.io/expowo/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zuanny D, Cardoso D (2022). expowo: R Package Mining Plant Diversity Distribution Data. https://dboslab.github.io/expowo/, https://github.com/dboslab/expowo.","code":"@Manual{,   title = {expowo: An R Package for Mining Plant Diversity and Distribution Data},   author = {Debora Zuanny and Domingos Cardoso},   year = {2022},   note = {https://dboslab.github.io/expowo/, https://github.com/dboslab/expowo}, }"},{"path":"https://dboslab.github.io/expowo/index.html","id":"expowo-","dir":"","previous_headings":"","what":"An R Package for Mining Plant Diversity and Distribution Data","title":"An R Package for Mining Plant Diversity and Distribution Data","text":"R package mining species checklist, diversity estimates, distribution data genus family flowering plants RGB Kew’s Plants World Online (POWO).","code":""},{"path":"https://dboslab.github.io/expowo/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"An R Package for Mining Plant Diversity and Distribution Data","text":"main goal expowo package retrieve information diversity distribution plant family publicly available taxonomically verified database Plants World Online (POWO). package intended efficiently mine content within source HTML pages specific genus family. can return comma-separated values (CSV) file number accepted species country-level distribution genus well full checklist accepted species genus family, authorship, original publication global distribution.","code":""},{"path":[]},{"path":"https://dboslab.github.io/expowo/index.html","id":"update-r-and-rstudio-versions","dir":"","previous_headings":"Before using expowo","what":"Update R and RStudio versions","title":"An R Package for Mining Plant Diversity and Distribution Data","text":"Please make sure installed latest versions R (Mac OS, Windows) RStudio (Mac OS / Windows: choose free version).","code":""},{"path":"https://dboslab.github.io/expowo/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R Package for Mining Plant Diversity and Distribution Data","text":"can install latest development version expowo GitHub using devtools package following R code: OBS.: download development version, need Git software installed. operating system Microsoft Windows, also need download Rtools. Otherwise, able install expowo easily available CRAN, just running following R code:","code":"install.packages(\"devtools\") devtools::install_github(\"DBOSlab/expowo\") library(expowo) install.packages(\"expowo\") library(expowo)"},{"path":"https://dboslab.github.io/expowo/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"An R Package for Mining Plant Diversity and Distribution Data","text":"package’s four major functions (powoGenera, powoSpecies, megaGen, toptenGen) require name target family (vector multiple family names) associated specific URI (Uniform Resource Identifier) identifies HTML page family POWO. four major functions work three auxiliary functions (getGenURI, getNumb, getDist) mine plant data. Respectively, getGenURI mines URI genus, getNumb mines total number species within genus, getDist complete search native introduced country-level distribution genus species. get POWO URI accepted plant family, can either look data frame object POWOcodes come together installed expowo package, can use function get_pow package taxize. , vector URI codes main input file everything can expowo package. See examples use expowo’s major functions mining basic information global plant diversity distribution ‘Articles’ section site.","code":""},{"path":"https://dboslab.github.io/expowo/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"An R Package for Mining Plant Diversity and Distribution Data","text":"detailed description expowo’s full functionality available . expowo package continuously constructed. want make suggestions, let us know! hope helpful botanical research!","code":""},{"path":"https://dboslab.github.io/expowo/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"An R Package for Mining Plant Diversity and Distribution Data","text":"Zuanny, D. & Cardoso, D. (2022). expowo: R package mining plant diversity distribution data. https://github.com/DBOSlab/expowo","code":""},{"path":"https://dboslab.github.io/expowo/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 expowo authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://dboslab.github.io/expowo/reference/angioData.html","id":null,"dir":"Reference","previous_headings":"","what":"List of Angiosperm species — angioData","title":"List of Angiosperm species — angioData","text":"Complete list non-hybrid species associated data Lecythidaceae, Aristolochiaceae, Begoniaceae, Martyniaceae, Dipterocarpaceae, Fagaceae, Amborellaceae, Cabombaceae, Piperaceae, Solanaceae Araceae retrieved POWO database function powoSpecies package gathered Nov 2022","code":""},{"path":"https://dboslab.github.io/expowo/reference/angioData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of Angiosperm species — angioData","text":"","code":"data(angioData)"},{"path":"https://dboslab.github.io/expowo/reference/angioData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List of Angiosperm species — angioData","text":"Dataframe","code":""},{"path":"https://dboslab.github.io/expowo/reference/angiospermsData.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete list of Angiosperms species — angiospermsData","title":"Complete list of Angiosperms species — angiospermsData","text":"Complete list Angiosperms non-hybrid species associated data retrieved POWO database function powoSpecies package gathered 11.2022.","code":""},{"path":"https://dboslab.github.io/expowo/reference/angiospermsData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete list of Angiosperms species — angiospermsData","text":"","code":"data(angiospermsData)"},{"path":"https://dboslab.github.io/expowo/reference/angiospermsData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Complete list of Angiosperms species — angiospermsData","text":"Dataframe","code":""},{"path":"https://dboslab.github.io/expowo/reference/botdivmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Global map of botanical country subdivisions — botdivmap","title":"Global map of botanical country subdivisions — botdivmap","text":"Global-scale map botanical countries (level 3) according World Geographical Scheme Recording Plant Distributions (WGSRPD)","code":""},{"path":"https://dboslab.github.io/expowo/reference/botdivmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global map of botanical country subdivisions — botdivmap","text":"","code":"data(botdivmap)"},{"path":"https://dboslab.github.io/expowo/reference/botdivmap.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Global map of botanical country subdivisions — botdivmap","text":"Sf Dataframe","code":""},{"path":"https://dboslab.github.io/expowo/reference/botdivmap.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Global map of botanical country subdivisions — botdivmap","text":"https://www.tdwg.org/standards/wgsrpd/","code":""},{"path":"https://dboslab.github.io/expowo/reference/botregions.html","id":null,"dir":"Reference","previous_headings":"","what":"Countries and associated classification of botanical divisions — botregions","title":"Countries and associated classification of botanical divisions — botregions","text":"Countries associated classification botanical divisions according World Geographical Scheme Recording Plant Distributions","code":""},{"path":"https://dboslab.github.io/expowo/reference/botregions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Countries and associated classification of botanical divisions — botregions","text":"","code":"data(botregions)"},{"path":"https://dboslab.github.io/expowo/reference/botregions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Countries and associated classification of botanical divisions — botregions","text":"Table .csv format","code":""},{"path":"https://dboslab.github.io/expowo/reference/botregions.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Countries and associated classification of botanical divisions — botregions","text":"https://www.tdwg.org/standards/wgsrpd/","code":""},{"path":"https://dboslab.github.io/expowo/reference/megaGen.html","id":null,"dir":"Reference","previous_headings":"","what":"Get megadiverse genera from POWO — megaGen","title":"Get megadiverse genera from POWO — megaGen","text":"produces CSV file listing megadiverse genera angiosperm family Plants World Online (POWO). numeric value define threshold considered megadiverse genus. Frodin, D.G.(2004) Taxon suggests 500 species threshold megadiverse genus.","code":""},{"path":"https://dboslab.github.io/expowo/reference/megaGen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get megadiverse genera from POWO — megaGen","text":"","code":"megaGen(family, uri, thld = NULL,         verbose = TRUE, save = TRUE, dir, filename)"},{"path":"https://dboslab.github.io/expowo/reference/megaGen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get megadiverse genera from POWO — megaGen","text":"family Either one family name vector multiple families present POWO. uri URI address family searched POWO. thld defined threshold species number genus considered megadiverse. threshold number provided, function consider value 500 based Frodin, D.G.(2004) Taxon. verbose Logical, FALSE, searched results printed console full. save Logical, FALSE, searched results saved disk. dir Pathway computer's directory, file saved provided argument save set TRUE. default create directory named results_megaGen searched results saved within subfolder named current date. filename Name output file saved. Default create file entitled output.","code":""},{"path":"https://dboslab.github.io/expowo/reference/megaGen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get megadiverse genera from POWO — megaGen","text":"Table .csv format saved disk.","code":""},{"path":[]},{"path":"https://dboslab.github.io/expowo/reference/megaGen.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get megadiverse genera from POWO — megaGen","text":"Debora Zuanny & Domingos Cardoso","code":""},{"path":"https://dboslab.github.io/expowo/reference/megaGen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get megadiverse genera from POWO — megaGen","text":"","code":"if (FALSE) {  library(expowo) library(taxize)  fam <- c(\"Fabaceae\", \"Lecythidaceae\") powocodes <- cbind(family = fam,                    data.frame(taxize::get_pow(fam)))  megaGen(powocodes$family, powocodes$uri,         thld = 500,         verbose = TRUE,         save = TRUE,         dir = \"results_megaGen/\",         filename = \"Fabaceae_Lecythidaceae\")  ## Searching for all megadiverse angiosperm genera ## in any or all families, by using the URI addresses ## within the POWOcodes data file  data(POWOcodes)  megaGen(POWOcodes$family, POWOcodes$uri,         thld = 500,         verbose = TRUE,         save = TRUE,         dir = \"results_megaGen/\",         filename = \"megadiverse_plant_genera\") }"},{"path":"https://dboslab.github.io/expowo/reference/POWOcodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete list of angiosperm families and associated URI addresses — POWOcodes","title":"Complete list of angiosperm families and associated URI addresses — POWOcodes","text":"Complete list APG IV-based families flowering plants associated URI addresses retrieved function get_pow package taxize","code":""},{"path":"https://dboslab.github.io/expowo/reference/POWOcodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete list of angiosperm families and associated URI addresses — POWOcodes","text":"","code":"data(POWOcodes)"},{"path":"https://dboslab.github.io/expowo/reference/POWOcodes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Complete list of angiosperm families and associated URI addresses — POWOcodes","text":"Dataframe","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoFam.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the species number of any plant family from POWO — powoFam","title":"Get the species number of any plant family from POWO — powoFam","text":"produces CSV file listing number species within target botanical families flowering plants available Plants World Online (POWO).","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoFam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the species number of any plant family from POWO — powoFam","text":"","code":"powoFam(family, uri,         verbose = TRUE, save = TRUE, dir, filename)"},{"path":"https://dboslab.github.io/expowo/reference/powoFam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the species number of any plant family from POWO — powoFam","text":"family Either one family name vector multiple families present POWO. uri URI address family searched POWO. verbose Logical, FALSE, search results printed console full. save Logical, FALSE, search results saved. dir Pathway computer's directory, file saved provided argument save set TRUE. default create directory named results_powoFam searched results saved within subfolder named current date. filename Name output file saved. Default create file entitled output.","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoFam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the species number of any plant family from POWO — powoFam","text":"Table .csv format saved disk.","code":""},{"path":[]},{"path":"https://dboslab.github.io/expowo/reference/powoFam.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the species number of any plant family from POWO — powoFam","text":"Debora Zuanny & Domingos Cardoso","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoFam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the species number of any plant family from POWO — powoFam","text":"","code":"if (FALSE) { library(expowo) library(taxize)  fam <- c(\"Araceae\", \"Sapotaceae\") powocodes <- cbind(family = fam,                    data.frame(taxize::get_pow(fam)))  powoFam(powocodes$family, powocodes$uri,         verbose = TRUE,         save = TRUE,         dir = \"results_powoFam/\",         filename = \"Araceae_Sapotaceae\")  ## Searching for the number of species in any or all flowering plant ## families, by using the URI addresses within the POWOcodes data file.  data(POWOcodes)  powoFam(POWOcodes$family, POWOcodes$uri,         verbose = TRUE,         save = TRUE,         dir = \"results_powoFam/\",         filename = \"all_angiosperms_species_number\") }"},{"path":"https://dboslab.github.io/expowo/reference/powoGenera.html","id":null,"dir":"Reference","previous_headings":"","what":"Get list of genera from POWO — powoGenera","title":"Get list of genera from POWO — powoGenera","text":"produces CSV file listing genera associated number accepted species geographical distribution angiosperm family Plants World Online (POWO).","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoGenera.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get list of genera from POWO — powoGenera","text":"","code":"powoGenera(family, uri, genus = NULL, country = NULL,            verbose = TRUE, save = TRUE, dir, filename)"},{"path":"https://dboslab.github.io/expowo/reference/powoGenera.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get list of genera from POWO — powoGenera","text":"family Either one family name vector multiple families present POWO. uri URI address family searched POWO. genus Either one genus name vector multiple genera present POWO. genus name provided, function search accepted genera known target family. country Either one country name vector multiple countries. country names provided, function return genera native countries, according POWO. verbose Logical, FALSE, searched results printed console full. save Logical, FALSE, searched results saved disk. dir Pathway computer's directory, file saved provided argument save set TRUE. default create directory named results_powoGenera searched results saved within subfolder named current date. filename Name output file saved. Default create file entitled output.","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoGenera.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get list of genera from POWO — powoGenera","text":"Table .csv format saves output disk.","code":""},{"path":[]},{"path":"https://dboslab.github.io/expowo/reference/powoGenera.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get list of genera from POWO — powoGenera","text":"Debora Zuanny & Domingos Cardoso","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoGenera.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get list of genera from POWO — powoGenera","text":"","code":"if (FALSE) { library(expowo) library(taxize)  fam <- c(\"Fabaceae\", \"Lecythidaceae\") powocodes <- cbind(family = fam,                    data.frame(taxize::get_pow(fam)))  powoGenera(powocodes$family, powocodes$uri,            verbose = TRUE,            save = TRUE,            dir = \"results_powoGenera/\",            filename = \"Fabaceae_Lecythidaceae\")  powoGenera(powocodes$family, powocodes$uri,            genus = c(\"Luetzelburgia\", \"Bertholletia\"),            country = c(\"Argentina\", \"Brazil\", \"French Guiana\"),            verbose = TRUE,            save = TRUE,            dir = \"results_powoGenera/\",            filename = \"Fabaceae_Lecythidaceae\")  ## Searching for all genera and associated species number and ## global distribution in any or all angiosperm families, ## by using the URI addresses within the POWOcodes data file  data(POWOcodes)  powoGenera(POWOcodes$family, POWOcodes$uri,            verbose = TRUE,            save = TRUE,            dir = \"results_powoGenera/\",            filename = \"all_angiosperm_genera\") }"},{"path":"https://dboslab.github.io/expowo/reference/powoMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Mapping species distribution from POWO data — powoMap","title":"Mapping species distribution from POWO data — powoMap","text":"produces global-scale maps species richness country botanical country levels genus family flowering plants associated species distribution data Plants World Online (POWO).","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mapping species distribution from POWO data — powoMap","text":"","code":"powoMap(data = NULL,         botctrs = NULL,         map_div = \"native_to_country\",         multigen = FALSE,         verbose = TRUE,         vir_color = \"viridis\",         bre_color = NULL,         leg_title = \"SR\",         dpi = 600,         dir = \"results_powoMap/\",         filename = \"global_richness_map\",         format = \"jpg\")"},{"path":"https://dboslab.github.io/expowo/reference/powoMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mapping species distribution from POWO data — powoMap","text":"data data frame species' global distribution country botanical country level created function powoSpecies. botctrs object class sf data.frame botanical country division World. object comes expowo's data package botdivmap. map_div One two column names native distribution input data created powoSpecies. default \"native_to_country\" generate global species richness maps country level. choosing \"native_to_botanical_countries\" global species richness maps colored according level 3 botanical subdivision World Geographical Scheme Recording Plant Distributions. make sure provided argument botctrs World's botanical country divisions botdivmap. multigen Logical, TRUE, function produce multiple global maps every single genus within input data. verbose Logical, FALSE, map creation steps printed console full. vir_color character vector name code color palettes Viridis package. bre_color character vector name code color palettes RColorBrewer package. leg_title character vector displayed output map legend. Default create one title called SR, means species richness. dpi One number range 72-4000 referring image resolution format dots per inch output file. Default create output 600 dpi. dir Pathway computer's directory, map file saved provided argument save set TRUE. default create directory named results_powoMap/ search results saved within subfolder named current date. filename Name output file saved. Default create file entitled global_richness_map. format character vector related file format global map saved. default \"jpg\" save output Joint Photographic Experts Group (.jpg), can also choose \"pdf\" save Portable Document Format (.pdf), \"tiff\" save Tag Image File Format (.tiff) \"png\" save Portable Network Graphics (.png).","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mapping species distribution from POWO data — powoMap","text":"Global map .pdf format saves output disk.","code":""},{"path":[]},{"path":"https://dboslab.github.io/expowo/reference/powoMap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Mapping species distribution from POWO data — powoMap","text":"Debora Zuanny & Domingos Cardoso","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoMap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mapping species distribution from POWO data — powoMap","text":"","code":"if (FALSE) { library(expowo) library(taxize)  powocodes <- cbind(family = \"Lecythidaceae\",                    data.frame(taxize::get_pow(\"Lecythidaceae\")))  mapspdist <- powoSpecies(powocodes$family, powocodes$uri,                          hybridspp = FALSE,                          country = NULL,                          verbose = TRUE,                          save = TRUE,                          dir = \"results_powoSpecies/\",                          filename = \"Lecythidaceae\")  # To create a map according to political countries powoMap(data = mapspdist,         botctrs = NULL,         map_div = \"native_to_country\",         multigen = TRUE,         verbose = FALSE,         vir_color = \"viridis\",         bre_color = NULL,         leg_title = \"SR\",         dpi = 600,         dir = \"results_powoMap/\",         filename = \"global_richness_country_map\",         format = \"jpg\")  # To create a map according to botanical countries subdivision data(botdivmap) powoMap(data = mapspdist,         botctrs = botdivmap,         map_div = \"native_to_botanical_countries\",         multigen = TRUE,         verbose = FALSE,         vir_color = \"viridis\",         bre_color = NULL,         leg_title = \"SR\",         dpi = 600,         dir = \"results_powoMap/\",         filename = \"global_richness_botcountry_map\",         format = \"jpg\") }"},{"path":"https://dboslab.github.io/expowo/reference/powoSpDist.html","id":null,"dir":"Reference","previous_headings":"","what":"Get list of species distribution from POWO — powoSpDist","title":"Get list of species distribution from POWO — powoSpDist","text":"produces CSV file listing geographical distribution target species flowering plants available Plants World Online (POWO).","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoSpDist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get list of species distribution from POWO — powoSpDist","text":"","code":"powoSpDist(family, uri, species = NULL,             verbose = TRUE, save = TRUE, dir, filename)"},{"path":"https://dboslab.github.io/expowo/reference/powoSpDist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get list of species distribution from POWO — powoSpDist","text":"family Either single family name vector multiple families present POWO. uri URI address family associated target genus searched POWO. species Either one non hybrid species name vector multiple species present POWO. species name provided, function search species accepted genera known target family. verbose Logical, FALSE, search results printed console full. save Logical, FALSE, search results saved disk. dir Pathway computer's directory, file saved provided argument save set TRUE. default create directory named results_powoSpDist search results saved within subfolder named current date. filename Name output file saved. Default create file entitled output.","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoSpDist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get list of species distribution from POWO — powoSpDist","text":"Table .csv format saves output disk.","code":""},{"path":[]},{"path":"https://dboslab.github.io/expowo/reference/powoSpDist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get list of species distribution from POWO — powoSpDist","text":"Debora Zuanny & Domingos Cardoso","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoSpDist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get list of species distribution from POWO — powoSpDist","text":"","code":"if (FALSE) { library(expowo) library(taxize)  fam <- c(\"Araceae\", \"Lecythidaceae\") powocodes <- cbind(family = fam,                    data.frame(taxize::get_pow(fam)))  powoSpDist(powocodes$family, powocodes$uri,            species = c(\"Anthurium longicaudatum\", \"Lecythis pisonis\"),            verbose = TRUE,            save = TRUE,            dir = \"results_powoSpDist/\",            filename = \"A_longicaudatum_L_pisonis\")  ## Searching for global distribution in any or all flowering plant family, ## by using the URI addresses within the POWOcodes data file.  data(POWOcodes)  powoSpDist(POWOcodes$family, POWOcodes$uri,            verbose = TRUE,            save = TRUE,            dir = \"results_powoSpDist/\",            filename = \"all_angiosperm_species_dist\") }"},{"path":"https://dboslab.github.io/expowo/reference/powoSpecies.html","id":null,"dir":"Reference","previous_headings":"","what":"Get list of species from POWO — powoSpecies","title":"Get list of species from POWO — powoSpecies","text":"produces CSV file listing accepted species associated geographical distribution target genus family flowering plants Plants World Online (POWO).","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoSpecies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get list of species from POWO — powoSpecies","text":"","code":"powoSpecies(family, uri, genus = NULL, hybridspp = FALSE, country = NULL,             verbose = TRUE, save = TRUE, dir, filename)"},{"path":"https://dboslab.github.io/expowo/reference/powoSpecies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get list of species from POWO — powoSpecies","text":"family Either single family name vector multiple families present POWO. uri URI address family associated target genus searched POWO. genus Either one genus name vector multiple genera present POWO. genus name provided, function search species accepted genera known target family. hybridspp Logical, TRUE, search results include hybrid species. country Either one country name vector multiple countries. country names provided, function return species native countries, according POWO. verbose Logical, FALSE, search results printed console full. save Logical, FALSE, search results saved disk. dir Pathway computer's directory, file saved provided argument save set TRUE. default create directory named results_powoSpecies search results saved within subfolder named current date. filename Name output file saved. Default create file entitled output.","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoSpecies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get list of species from POWO — powoSpecies","text":"Table .csv format saves output disk.","code":""},{"path":[]},{"path":"https://dboslab.github.io/expowo/reference/powoSpecies.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get list of species from POWO — powoSpecies","text":"Debora Zuanny & Domingos Cardoso","code":""},{"path":"https://dboslab.github.io/expowo/reference/powoSpecies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get list of species from POWO — powoSpecies","text":"","code":"if (FALSE) { library(expowo) library(taxize)  fam <- c(\"Araceae\", \"Lecythidaceae\") powocodes <- cbind(family = fam,                    data.frame(taxize::get_pow(fam)))  powoSpecies(powocodes$family, powocodes$uri,             hybridspp = FALSE,             country = c(\"Argentina\", \"Brazil\", \"French Guiana\"),             verbose = TRUE,             save = TRUE,             dir = \"results_powoSpecies/\",             filename = \"Araceae_Lecythidaceae\")  ## Searching for all species and associated global distribution ## in any or all flowering plant genera, by using the URI addresses ## within the POWOcodes data file  data(POWOcodes)  powoSpecies(POWOcodes$family, POWOcodes$uri,             hybridspp = TRUE,             verbose = TRUE,             save = TRUE,             dir = \"results_powoSpecies/\",             filename = \"all_angiosperm_species\") }"},{"path":"https://dboslab.github.io/expowo/reference/toptenGen.html","id":null,"dir":"Reference","previous_headings":"","what":"Get top ten most species-rich genera — toptenGen","title":"Get top ten most species-rich genera — toptenGen","text":"produces CSV file listing top ten diverse genera target botanical family flowering plants Plants World Online (POWO).","code":""},{"path":"https://dboslab.github.io/expowo/reference/toptenGen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get top ten most species-rich genera — toptenGen","text":"","code":"toptenGen(family, uri,           verbose = TRUE, save = TRUE, dir, filename)"},{"path":"https://dboslab.github.io/expowo/reference/toptenGen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get top ten most species-rich genera — toptenGen","text":"family Either one family name vector multiple families present POWO. uri URI address family searched POWO. verbose Logical, FALSE, search results printed console full. save Logical, FALSE, search results saved. dir Pathway computer's directory, file saved provided argument save set TRUE. default create directory named results_toptenGen searched results saved within subfolder named current date. filename Name output file saved. Default create file entitled output.","code":""},{"path":"https://dboslab.github.io/expowo/reference/toptenGen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get top ten most species-rich genera — toptenGen","text":"Table .csv format saved disk.","code":""},{"path":[]},{"path":"https://dboslab.github.io/expowo/reference/toptenGen.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get top ten most species-rich genera — toptenGen","text":"Debora Zuanny & Domingos Cardoso","code":""},{"path":"https://dboslab.github.io/expowo/reference/toptenGen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get top ten most species-rich genera — toptenGen","text":"","code":"if (FALSE) { library(expowo) library(taxize)  fam <- c(\"Araceae\", \"Lecythidaceae\") powocodes <- cbind(family = fam,                    data.frame(taxize::get_pow(fam)))  toptenGen(powocodes$family, powocodes$uri,           verbose = TRUE,           save = TRUE,           dir = \"results_toptenGen/\",           filename = \"Araceae_Lecythidaceae\")  ## Searching for the top ten most diverse genera ## in any or all flowering plant families, by using ## the URI addresses within the POWOcodes data file  data(POWOcodes)  toptenGen(POWOcodes$family, POWOcodes$uri,         verbose = TRUE,         save = TRUE,         dir = \"results_toptenGen/\",         filename = \"toptendiverse_plant_genera\") }"}]
